{
  "@context": {
    "@vocab": "https://schema.org/",
    "medipim": "https://api.au.medipim.com/",
    "endpoint": "medipim:endpoint",
    "documentation": "medipim:documentation"
  },
  "@type": "APIDocumentation",
  "@id": "https://platform.au.medipim.com/docs/api/v4/",
  "name": "Medipim API V4 Documentation",
  "description": "Complete REST API documentation for Medipim Platform V4",
  "version": "4.0",
  "provider": {
    "@type": "Organization",
    "name": "Medipim",
    "url": "https://medipim.com",
    "description": "Product Information Management for the pharmaceutical industry"
  },
  "baseURL": "https://api.au.medipim.com/v4/",
  "generatedAt": "2025-06-10T09:49:13.781562",
  "generatedBy": "simple_docs_converter.py",
  "documentationPages": [
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/support",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_support.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "pageType": "documentation",
      "sections": []
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/error-handling",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_error-handling.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "pageType": "documentation",
      "sections": []
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": null,
      "pageType": "overview",
      "sections": []
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/test",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_test.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": null,
      "pageType": "documentation",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n                    GET\n                    POST\n\n                URL\n\n                    https://api.au.medipim.com/v4\n\n                Authorization\n\n                Request body\n\n            Send"
        },
        {
          "type": "response",
          "title": "Response",
          "content": ""
        }
      ]
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/uploading",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_uploading.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "pageType": "documentation",
      "sections": [
        {
          "type": "section",
          "title": "General Advice",
          "content": "The most effective way to name your files is to incorporate the product's unique identifier numbers and the languages that apply. In this way, the files are automatically linked to the products.\n\n                        An optimal file name could be for example:\nEAN0123456789101-PA-EN-FRONT-LEFT.jpg\n\n            The parameters mentioned below are taken into account:\n\n                    Product identifiers:\n\n                        EAN-13 code (ex: \"EAN0123456789101\")\n\n                    Type of the image:\n\n                        for packshots use \"pa\"\n\n                        for productshots use \"pr\"\n\n                        for pillshots use \"pi\"\n\n                        for lifestyle images use \"ls\"\n\n                    Languages for which the image is applied (for example: en-en)\n\n                    Visible sides of the subject:\n\n                        if the frontside is visible, use \"front\"\n\n                        if the left- or rightside is visible, use \"left\" or \"right\"\n\n                        if the backside is visible, use \"back\"\n\n                        if the topside is visible, use \"top\"\n\n                        if the bottomside is visible, use \"bottom\"\n\n            Please note: .png files are not optimised for website or webshop applications; we recommend using .jpg files.\n\n            Please do not use special characters such as &é”’(§è!çà) and avoid spaces and points in the naming of the file."
        },
        {
          "type": "section",
          "title": "Packshots",
          "content": "Packshots are images of the packaging.\n\n            These images must meet the following minimum technical requirements:\n\n                JPEG format\n\n                At least 1500x1500 pixels in size\n\n                Square image (not rectangular)\n\n                White background or transparent background\n\n                The product is photographed at an angle of 30°\n\n                Always include at least 1 identifier in the file name (for example the EAN number)"
        },
        {
          "type": "section",
          "title": "Productshots",
          "content": "Product shots are images of the product in its packaging. (e.g., bottle, tablet, brace, etc.)\n\n            These images must meet the following minimum technical requirements:\n\n                JPEG format\n\n                At least 1500x1500 pixels in size\n\n                Square image (not rectangular)\n\n                White background or transparent background\n\n                Always include at least 1 identifier in the file name (for example the EAN number)"
        },
        {
          "type": "section",
          "title": "Pillshots",
          "content": "A pillshot is an image of the pill that's inside the packaging.\n\n            These images must meet the following minimum technical requirements:\n\n                JPEG format\n\n                At least 1500x1500 pixels in size\n\n                Square image (not rectangular)\n\n                Always include at least 1 identifier in the file name (for example the EAN number)"
        },
        {
          "type": "section",
          "title": "Lifestyle Images",
          "content": "A lifestyle image is any image that is not a \"packshot\", \"productshot\" or \"pillshot” or “frontal shot“\n\n            These images must meet the following minimum technical requirements:\n\n                JPEG format\n\n                At least 1500x1500 pixels in size\n\n                Square image (not rectangular)\n\n                Always include at least 1 identifier in the file name (for example the EAN number)"
        },
        {
          "type": "section",
          "title": "Brochures",
          "content": "Brochures must be uploaded in PDF format (no .doc, .docx, .xlsx, .pptx, etc.) and should not exceed 20MB."
        }
      ]
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/using-the-api",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_using-the-api.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "pageType": "documentation",
      "sections": [
        {
          "type": "section",
          "title": "Production Environment",
          "content": "We have a production environment that is used to call data from when everything has been tested and is\n                ready for live implementation.\n\n                Platform: https://platform.au.medipim.com\n\n                API: https://api.au.medipim.com"
        },
        {
          "type": "section",
          "title": "Sandbox Environment",
          "content": "We have a sandbox environment that can be used to test and experiment.\nPlease contact our support\n                team for more details and to gain access.\n\n                    Platform: https://platform.sandbox.au.medipim.com\n\n                    API: https://api.sandbox.au.medipim.com\n\n                        WARNING: The data on this environment is removed periodically !"
        },
        {
          "type": "section",
          "title": "Throttling & product quotas",
          "content": "While there are various algorithms for API throttling, here are the basic steps in any API throttling\n                algorithm:\n\n            A client/user calls an API that interfaces with a web service or application.\nThe API throttling\n                logic checks if the current request exceeds the allowed number of API calls.\nIf the request is\n                within limits, the API performs as usual and completes the user’s task.\nIf the request exceeds the\n                limit, the API returns an error response to the user.\nThe user will have to wait for a pre-agreed\n                time period, or pay to make any more API calls.\n\n            V4 of our API allows 100 requests per minute. The PHP client will automatically throttle your requests to\n                respect this rate. Please refer to this section for more information on how to handle these requests: How to handle API requests of 100/min\n\n            If you exceed this rate, an error will be return (http status code 429, error code too_many_requests\n                Error Handling)."
        },
        {
          "type": "section",
          "title": "First time integration tips and tricks",
          "content": "Requesting all products at the start\n\n            Most people when first integrating Medipim tend to request all products at once through one API call and\n                make it so that they get all the data. This request will contain huge amounts of information. Here we\n                recommend to instantly process the response (making sure to not buffer it) so you can start processing\n                it. More info can be found here FAQ\n\n            User-Agent requirement for image requests\n\n            A user-agent is required when requesting images through an API for identification, security, and optimization purposes.\n            It helps the API recognize the client, enforce rate limits, prevent unauthorized scraping,\n            optimize content delivery, and comply with access policies.\n            Some APIs may block requests without a proper user-agent.\n            Always include a descriptive user-agent string to ensure smooth API interaction.\n            More info can be found here."
        },
        {
          "type": "section",
          "title": "Handling errors",
          "content": "Please refer to our error handling page to see how each error can be resolved: Error Handling"
        }
      ]
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/test",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_test.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": null,
      "pageType": "documentation",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n                    GET\n                    POST\n\n                URL\n\n                    https://api.au.medipim.com/v4\n\n                Authorization\n\n                Request body\n\n            Send"
        },
        {
          "type": "response",
          "title": "Response",
          "content": ""
        }
      ]
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/field-glossary",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_field-glossary.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "<?php echo $contentLastUpdatedTime; ?>",
      "pageType": "documentation",
      "sections": [
        {
          "type": "section",
          "title": "Languages",
          "content": "The platform supports the native spoken languages for AU\nWe\n                have also included English as this is the most common language among web development.\n\n            Possible values are: en\n\n            Localized fields will always look like:\n\n                    xxx:\n\n                        language_iso2: ..."
        },
        {
          "type": "section",
          "title": "Country regions",
          "content": "The platforms supports the following country regions for AU.\n\n                    code\n                    label\n\n                        AU-ACT\n                        Australian Capital Territory\n\n                        AU-NSW\n                        New South Wales\n\n                        AU-NT\n                        Northern Territory\n\n                        AU-QLD\n                        Queensland\n\n                        AU-SA\n                        South Australia\n\n                        AU-TAS\n                        Tasmania\n\n                        AU-VIC\n                        Victoria\n\n                        AU-WA\n                        Western Australia"
        },
        {
          "type": "section",
          "title": "Product identifier codes",
          "content": "ean: EAN stands for European Article Number, which is a global trade number (GTIN) issued\n                    by GS1. GTINs are usually 8, 12, 13, or 14 digits long.\nThis field is designed to hold\n                        current and legacy EAN-info about the product, thus it can contain multiple values.\n\n                gtin: GTIN stands for Global Trade Number, it's a globally recognised number issued by GS1\n                    that's tied to a specific product. GTINs are usually 8, 12, 13, or 14 digits long.\nThis\n                        field is designed to hold legacy GTIN-info about the product. (⚠️ deprecated use eanGtin14\n                    instead)\n\n                eanGtin8: EAN 8 is used to identify products using 8-digit global trade number (GTIN 8). It\n                    is typically used outside the US and Canada.\n\n                eanGtin12: EAN12 is used to identify products using a 12-digit global trade number (GTIN\n                    12). It is typically used within the US and Canada though.\n\n                eanGtin13: EAN13 is used to identify products using a 13-digit global trade number (GTIN\n                    13). It is typically used outside the US and Canada.\n\n                eanGtin14: EAN 14 / GTIN is used to identify products using a 14-digit global trade number\n                    (GTIN 14). It is typically used outside the US and Canada.\n\n                                                                                                                                                    Fred: Fred POS Code.\n\n                Z Code: ZRegister POS Code.\n\n                PBS: Pharmaceutical Benefits Scheme Code.\n\n                SNOMED-MP: Medicinal Product Code.\n\n                SNOMED-MPP: Medicinal Product Pack Code.\n\n                SNOMED-MPUU: Medicinal Product Units of Use Code.\n\n                SNOMED-TP: Trade Product Code.\n\n                SNOMED-TPP: Trade Product Pack Code.\n\n                SNOMED-TPUU: Trade Product Unit of Use Code.\n\n                SNOMED-CTPP: Contained Trade Product Pack Code."
        },
        {
          "type": "section",
          "title": "Target groups",
          "content": "The content on Medipim is designed for multiple target groups.\n\n                                    public\n\n                                    pharmacist\n\n                                    doctor\n\n                                    homecare\n\n                                    hospital\n\n                                    nurse\n\n                                    physiotherapist\n\n                                    webshop"
        },
        {
          "type": "section",
          "title": "Media",
          "content": "Media types\n\n                We have different media types available:\n\n                                            photo\n\n                                            frontal\n\n                                            link\n\n            Photo types\n\n            A photo can have one of the following types:\n\n                                    packshot\n\n                                    productshot\n\n                                    lifestyle_image\n\n                                    pillshot\n\n            Visible sides\n\n            The following sides of the product can be visible on a photo:\n\n                                    front\n\n                                    left\n\n                                    right\n\n                                    back\n\n                                    bottom\n\n                                    top\n\n            Link types\n\n            Links on Medipim can have one of the following types:\n\n                                    app\n\n                                    brochure\n\n                                    video\n\n                                    website"
        },
        {
          "type": "section",
          "title": "Product descriptions",
          "content": "Description types\n\n                        code\n                                                    en\n\n                            full_description\n                                                            General description\n\n                            faq\n                                                            Frequently asked questions\n\n                            measurements\n                                                            Measurements\n\n                            legal_text\n                                                            Legal text\n\n                            indication\n                                                            Indications\n\n                            contra_indication\n                                                            Contra indications\n\n                            usage\n                                                            Uses\n\n                            usage_extended\n                                                            Uses extended\n\n                            composition\n                                                            Composition\n\n                            properties\n                                                            Properties\n\n                            side_effects\n                                                            Side effects\n\n                            nutritional_value\n                                                            Nutritional value\n\n                            usage_type\n                                                            Uses type\n\n                            pregnancy_description\n                                                            Pregnancy description\n\n                            pregnancy_description_extended\n                                                            Pregnancy description extended\n\n                            breastfeeding_description\n                                                            Breastfeeding description\n\n                            breastfeeding_description_extended\n                                                            Breastfeeding description extended\n\n                            interactions\n                                                            Interactions\n\n                            warnings\n                                                            Warnings\n\n                            keywords\n                                                            Keywords"
        },
        {
          "type": "section",
          "title": "hasContent",
          "content": "The hasContent filter allows you to filter products if they have a specific field. Let's say you want to\n                get all products which have a weight value. Then you would just use this filter in the body:\n\n            \"hasContent\": {\n \"flag\" : \"weight\"\n}\n            This is a very effective way to refine your selection and get optimized results. Of course, this can be\n                combined with different filters. Such as the AND, NOT, OR filters. You can use the get-fields] endpoint to get a list of all the\n                possible flags to filter on.\n\n            Add a locale parameter for fields that have localized values.\n\n            \"hasContent\": {\n \"flag\": \"descriptions.usage\",\n \"locale\": \"en\"\n}\n            See below for an advanced use case involving the hasContent filter.\n\n                    Get\n                        all products that have at least one media item and description for primary content language"
        },
        {
          "type": "section",
          "title": "ARTG ID",
          "content": "Australian Register of Therapeutic Goods ID (corresponding to AUST R)\n\n                    Get products by ARTG ID"
        },
        {
          "type": "section",
          "title": "HTML content",
          "content": "Tags that are not allowed (or invalid HTML) are stripped from the content.\nAllowed HTML tags and\n                their allowed properties:\n\n                &lt;b&gt;:\n                &lt;i&gt;:\n                &lt;p&gt;: `style`\n                &lt;table&gt;: `style`, `border`\n                &lt;tbody&gt;:\n                &lt;thead&gt;:\n                &lt;tfoot&gt;:\n                &lt;tr&gt;:\n                &lt;th&gt;: `style`, `colspan`, `rowspan`\n                &lt;td&gt;: `style`, `colspan`, `rowspan`\n                &lt;ol&gt;:\n                &lt;ul&gt;:\n                &lt;li&gt;:\n                &lt;span&gt;: `style`\n                &lt;strong&gt;:\n                &lt;em&gt;:\n                &lt;div&gt;: `class`, `style`\n                &lt;h1&gt;:\n                &lt;h2&gt;:\n                &lt;h3&gt;:\n                &lt;h4&gt;:\n                &lt;h5&gt;:\n                &lt;h6&gt;:\n                &lt;dl&gt;:\n                &lt;dt&gt;:\n                &lt;dd&gt;:\n                &lt;blockquote&gt;:\n                &lt;sup&gt;:\n                &lt;sub&gt;:"
        },
        {
          "type": "section",
          "title": "Numerical operators",
          "content": "Numerical operators are used in specific filters on Medipim; Their value can be one of the following:\n\n                                    eq\n\n                                    gt\n\n                                    gte\n\n                                    lt\n\n                                    lte\n\n                                    neq"
        }
      ]
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/examples",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_examples.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "pageType": "documentation",
      "sections": [
        {
          "type": "section",
          "title": "Products",
          "content": "Query endpoint\n\n                Get all active products with an image and description\n\n                Get all active products with a frontal image, descriptions and that have been updated since a specific date\n\n                Get all active products except prescription drugs\n\n                Get all active products distributed by a specific company\n\n                Get all active products of a specific brand\n\n                Get all active products while using the hasContent filter for products that have a public price. The default pagination size will be used.\n\n                Get frontal images (images that are suitable for touchscreens and marketing tools)\n\n            Stream endpoint\n\n                Get all active products, with minimumContent. Sort by name. The default pagination size will be used."
        },
        {
          "type": "section",
          "title": "Media",
          "content": "Upload media\n\n                Request media that have been created on a specific date"
        }
      ]
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/faq",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_faq.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "pageType": "documentation",
      "sections": [
        {
          "type": "section",
          "title": "How to handle API requests of 100/min?",
          "content": "if you expect to do more calls per minute, these are the ways of handling that:\n\n                Use Medipim as CDN, which means you refer to our url and have no limitations.\nDisadvantage: when Medipim is in maintenance, you will have no data\n\n                    Store the data locally and synchronize regularly. You can avoid the request limit by\n\n                        spacing you requests in time (one of our POS customers has hundreds of end clients and uses this technique)\n\n                        using several API keys so you can switch to a different key when the limit has been reached\n\n            For your first import of product data there are 2 endpoints available:\n\n                the amount of products you expect to get will be less than 10000 products -> choose 'query'\n\n                    the amount or products you expect is more than 10000 products (or unknown) -> choose 'streaming'\n\n                        Each line in the response is a json and contains information for 1 product\n\n                        You can start processing the data immediately\n\n                        Tip: you need to log which products have been processed, so you don't need to start all over when the connection is lost"
        },
        {
          "type": "section",
          "title": "How to deal with product status",
          "content": "You can use a filter in the body of the API request to select only the active products, for example. Inactive can be used to phase out products in your online application. Because when a product is inactive in Medipim it won’t be sold any more and there most likely won’t be any stock for that product anymore.\n\n            {&lt;br /&gt;   &quot;status&quot;: &quot;active&quot;&lt;br /&gt;}"
        },
        {
          "type": "section",
          "title": "In what format are prices returned through the API?",
          "content": "We always return prices in the base denotation (= lowest amount of the currency) to make sure there are no rounding errors. You can get the correct format by dividing the given number by 100.\n\n                ex. API response is returning \"820\" for a price field; This means that the price is $8.20\n                    ."
        },
        {
          "type": "section",
          "title": "How to request a large set of data?",
          "content": "You will have to decide in what way you are going to import data.\n\n            The products are presented through a newline in the response stream, appearing line by line. This allows for immediate data processing instead of waiting for the entire stream to receive and process a complete data block. If you're conducting tests, it's advisable to utilize the query endpoint, specifying pagination for optimal results.\n\n            Acquiring all information through a single API call is feasible, but it's crucial to note that the resulting response will be substantial. We strongly advise promptly handling the data to avoid buffering delays and initiate processing immediately. Neglecting this step may introduce risks and lead to failures. This precaution ensures the seamless operation of your system, allowing you to import data worry-free and maintain smooth functionality."
        },
        {
          "type": "section",
          "title": "User-agent requirement for image requests",
          "content": "All API requests made to access images must include a valid user-agent header. Requests without a user-agent may be rejected.\n\n            Requirement details:\n\n                The user-agent header must clearly identify the application or service making the request.\n\n                Generic or empty user-agent values (e.g., \"Mozilla/5.0\", \"curl/7.x\", or \"-\") may result in denied access.\n\n                Recommended format:\n\n            User-agent: YourAppName/Version (Contact Information)\n\n            Example:\n\n            User-agent: MyImageService/1.2 (contact@yourdomain.com)"
        },
        {
          "type": "section",
          "title": "How to know which fields are available?",
          "content": "We have an endpoint that can be called to request all the fields available get-fields. Those can be used to filter on using the hasContent filter in the body."
        },
        {
          "type": "section",
          "title": "Product Identifiers",
          "content": "Not all products have a product identifier code. \nIf you need to have a unique code for a product, you should use the Medipim product ID.\n\n            Products can have multiple EAN codes; Europe also intended to use this as a cross-country unique product code. In reality this code has duplicates..."
        },
        {
          "type": "section",
          "title": "Setting Up Media Integration",
          "content": "What is the difference between media type 'photo' and media type 'frontal'?\n\n                    We have the following photo types: packshot, productshot, pillshot, lifestyle_image. \n                    Frontals are not an additional or standalone photo type, but are a selection of photos that meet certain criteria to be suitable for use on touchscreens and marketing tools. \n                    The criteria are: the photo type must be packshot or productshot, the format must be transparent PNG, and visibleSides is only front.\n\n        Initial Sync\n\n        To start syncing your products or media:\n\n        Starting with Products:\n\n            Use the product query or stream function to start. Remember to save the date when you last synced (we’ll call this lastSyncedOn).\n\n        Starting with Media:\n\n            Similarly, use the media query or stream function and save the sync date as lastSyncedOn.\n\n        Daily Sync\n\n            For daily updates:\n\n                Use the updatedSince filter to make sure you only get new or updated products or media.\n\n                After each sync, update the lastSyncedOn date to ensure you're only syncing what's new.\n\n        Syncing Media Items\n\n                Store the IDs and URLs of your media files locally (on your system).\n\n                When syncing, check if each media file has been synced before:\n\n                        If yes, compare the new URL with the one stored. Update it if needed.\n\n                        If a media file is missing, remove its ID from your local records.\n\n            This method keeps your files up-to-date and clears out any that are no longer available."
        }
      ]
    },
    {
      "@type": "DocumentationPage",
      "@id": "https://platform.au.medipim.com/docs/api/v4/faq",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_faq.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "pageType": "documentation",
      "sections": [
        {
          "type": "section",
          "title": "How to handle API requests of 100/min?",
          "content": "if you expect to do more calls per minute, these are the ways of handling that:\n\n                Use Medipim as CDN, which means you refer to our url and have no limitations.\nDisadvantage: when Medipim is in maintenance, you will have no data\n\n                    Store the data locally and synchronize regularly. You can avoid the request limit by\n\n                        spacing you requests in time (one of our POS customers has hundreds of end clients and uses this technique)\n\n                        using several API keys so you can switch to a different key when the limit has been reached\n\n            For your first import of product data there are 2 endpoints available:\n\n                the amount of products you expect to get will be less than 10000 products -> choose 'query'\n\n                    the amount or products you expect is more than 10000 products (or unknown) -> choose 'streaming'\n\n                        Each line in the response is a json and contains information for 1 product\n\n                        You can start processing the data immediately\n\n                        Tip: you need to log which products have been processed, so you don't need to start all over when the connection is lost"
        },
        {
          "type": "section",
          "title": "How to deal with product status",
          "content": "You can use a filter in the body of the API request to select only the active products, for example. Inactive can be used to phase out products in your online application. Because when a product is inactive in Medipim it won’t be sold any more and there most likely won’t be any stock for that product anymore.\n\n            {&lt;br /&gt;   &quot;status&quot;: &quot;active&quot;&lt;br /&gt;}"
        },
        {
          "type": "section",
          "title": "In what format are prices returned through the API?",
          "content": "We always return prices in the base denotation (= lowest amount of the currency) to make sure there are no rounding errors. You can get the correct format by dividing the given number by 100.\n\n                ex. API response is returning \"820\" for a price field; This means that the price is $8.20\n                    ."
        },
        {
          "type": "section",
          "title": "How to request a large set of data?",
          "content": "You will have to decide in what way you are going to import data.\n\n            The products are presented through a newline in the response stream, appearing line by line. This allows for immediate data processing instead of waiting for the entire stream to receive and process a complete data block. If you're conducting tests, it's advisable to utilize the query endpoint, specifying pagination for optimal results.\n\n            Acquiring all information through a single API call is feasible, but it's crucial to note that the resulting response will be substantial. We strongly advise promptly handling the data to avoid buffering delays and initiate processing immediately. Neglecting this step may introduce risks and lead to failures. This precaution ensures the seamless operation of your system, allowing you to import data worry-free and maintain smooth functionality."
        },
        {
          "type": "section",
          "title": "User-agent requirement for image requests",
          "content": "All API requests made to access images must include a valid user-agent header. Requests without a user-agent may be rejected.\n\n            Requirement details:\n\n                The user-agent header must clearly identify the application or service making the request.\n\n                Generic or empty user-agent values (e.g., \"Mozilla/5.0\", \"curl/7.x\", or \"-\") may result in denied access.\n\n                Recommended format:\n\n            User-agent: YourAppName/Version (Contact Information)\n\n            Example:\n\n            User-agent: MyImageService/1.2 (contact@yourdomain.com)"
        },
        {
          "type": "section",
          "title": "How to know which fields are available?",
          "content": "We have an endpoint that can be called to request all the fields available get-fields. Those can be used to filter on using the hasContent filter in the body."
        },
        {
          "type": "section",
          "title": "Product Identifiers",
          "content": "Not all products have a product identifier code. \nIf you need to have a unique code for a product, you should use the Medipim product ID.\n\n            Products can have multiple EAN codes; Europe also intended to use this as a cross-country unique product code. In reality this code has duplicates..."
        },
        {
          "type": "section",
          "title": "Setting Up Media Integration",
          "content": "What is the difference between media type 'photo' and media type 'frontal'?\n\n                    We have the following photo types: packshot, productshot, pillshot, lifestyle_image. \n                    Frontals are not an additional or standalone photo type, but are a selection of photos that meet certain criteria to be suitable for use on touchscreens and marketing tools. \n                    The criteria are: the photo type must be packshot or productshot, the format must be transparent PNG, and visibleSides is only front.\n\n        Initial Sync\n\n        To start syncing your products or media:\n\n        Starting with Products:\n\n            Use the product query or stream function to start. Remember to save the date when you last synced (we’ll call this lastSyncedOn).\n\n        Starting with Media:\n\n            Similarly, use the media query or stream function and save the sync date as lastSyncedOn.\n\n        Daily Sync\n\n            For daily updates:\n\n                Use the updatedSince filter to make sure you only get new or updated products or media.\n\n                After each sync, update the lastSyncedOn date to ensure you're only syncing what's new.\n\n        Syncing Media Items\n\n                Store the IDs and URLs of your media files locally (on your system).\n\n                When syncing, check if each media file has been synced before:\n\n                        If yes, compare the new URL with the one stored. Update it if needed.\n\n                        If a media file is missing, remove its ID from your local records.\n\n            This method keeps your files up-to-date and clears out any that are no longer available."
        }
      ]
    }
  ],
  "apiEndpoints": [
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/active-ingredients/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_active-ingredients_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "active-ingredients",
      "endpoint": "query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/active-ingredients/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/active-ingredients/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Matches active ingredient by Medipim ID.\n                            One or more IDs\n                            {\"id\": 1} or {\"id\": [1, 2]}\n\n                            {\"search\": ...}\n                            Matches active ingredients by searching their name.\n                            String\n                            {\"search\": {\"query\": \"chloride\", \"locale\": \"en\"}}\n\n                            {\"and\": [...]}\n                            Matches active ingredients that match all of the given filters.\n                            A list of filters.\n                            {\"and\": [{\"id\": 10}, {\"search\": {\"query\": \"chloride\", \"locale\": \"en\"}}]}\n\n                            {\"or\": [...]}\n                            Matches active ingredients that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"id\": 1}, {\"search\": {\"query\": \"chloride\", \"locale\": \"en\"}]}}\n\n                            {\"not\": ...}\n                            Matches active ingredients that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"id\": 1}}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total number of active ingredients (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]:\n\n                        id: Medipim ID of the active ingredient (integer, unique)\n\n                        name.{...}: Name of the active ingredient (string, localized)\n\n                            meta:\n\n                                createdAt: When the active ingredient was created on Medipim (unix timestamp)\n\n                                updatedAt: when the active ingredient information was last updated (unix timestamp)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all active ingredients"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/brands/create",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_brands_create.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "brands",
      "endpoint": "create",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/brands/create",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/brands/create\n\n            Headers\n\n                Authorization\n\n            Body\n\n                name: Name of the brand (string, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    brand:\n\n                        id, name, ...: brand information (same as brand query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/brands/find",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_brands_find.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "brands",
      "endpoint": "find",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/brands/find",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/brands/find\n\n            Headers\n\n                Authorization\n\n            Parameters\n\n            Fields to identify the brand you want to get:\n\n                id: Medipim ID of the brand (integer)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    brand:\n\n                        id, name, ...: brand information (same as brand query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/brands/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_brands_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "brands",
      "endpoint": "query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/brands/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/brands/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                sorting: one of the sortings below. (optional; default is {\"id\": \"ASC\"})\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Matches brands by Medipim ID.\n                            One or more IDs\n                            {\"id\": 1} or {\"id\": [1, 2]}\n\n                            {\"search\": ...}\n                            Matches brands by a specific search query.\n                            String\n                            {\"search\": \"somesearchterm\"}\n\n                            {\"and\": [...]}\n                            Matches brands that match all of the given filters.\n                            A list of filters.\n                            {\"and\": [{\"id\": [1, 2, ...]}, {\"search\": \"test\"}]}\n\n                            {\"or\": [...]}\n                            Matches brands that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"id\": [1, 2, ...]}, {\"search\": \"test\"}]}\n\n                            {\"not\": ...}\n                            Matches brands that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"id\": 1}}\n\n                            Sorting\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Sort by Medipim ID\n                            \"ASC\" or \"DESC\"\n                            {\"id\": \"ASC\"} or {\"id\": \"DESC\"}\n\n                            {\"name\": ...}\n                            Sort by Name\n                            \"ASC\" or \"DESC\"\n                            {\"name\": \"ASC\"} or {\"name\": \"DESC\"}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total number of brands (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]:\n\n                        id: Medipim ID of the brand (integer, unique)\n\n                        name: Name of the brand (string)\n\n                            meta:\n\n                                createdAt: When the brand was created on Medipim (unix timestamp)\n\n                                updatedAt: when the brand information was last updated (unix timestamp)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all brands with \"pharma\" in their name"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/brands/update",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_brands_update.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "brands",
      "endpoint": "update",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/brands/update",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/brands/update\n\n            Headers\n\n                Authorization\n\n            Body\n\n                id: Medipim ID of the brand (integer, required)\n\n                    data:\n\n                        name: Name of the brand (string, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    brand:\n\n                        id, name, ...: brand information (same as brand query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/corrections/create",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_corrections_create.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "corrections",
      "endpoint": "create",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/corrections/create",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/corrections/create\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    product: one of the following (optional for type \"product_does_not_exist\" otherwise it's required)\n\n                        Medipim product ID (string)\n\n                        Key value array containing the identifier field and value (array)\n\n                locale: Language for which the correction should be created (string, required)\n\n                type: Type of the correction (string, required)\n\n                text: Descriptive feedback text (string, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    brand:\n\n                        id, product, ...: feedback information (same as correction find result)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Create Correction using product ID\n\n            Create Correction for a missing product"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/corrections/find",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_corrections_find.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "corrections",
      "endpoint": "find",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/corrections/find",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/corrections/find\n\n            Headers\n\n                Authorization\n\n            Parameters\n\n            Provide the ID to identify the correction you want to get:\n\n                id: Medipim ID of the correction (integer)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    correction:\n\n                        id, ...: correction information (same as corrections query results)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Get information on a correction via its Medipim ID."
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/corrections/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_corrections_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "corrections",
      "endpoint": "query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/corrections/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/corrections/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                sorting: one of the sortings below. (optional; default is {\"id\": \"ASC\"})\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"product\": ...}\n                            Matches corrections by product.\n                            Medipim product ID\n                            {\"product\": \"M1A2B3C4D5\"}\n\n                            {\"status\": ...}\n                            Matches corrections by status.\n                            Possible values: \"open\", \"in_progress\" or \"handled\".\n                            {\"status\": \"open\"}\n\n                            {\"organization\": ...}\n                            Matches corrections by organization.\n                            Medipim organization ID\n                            {\"organization\": 1}\n\n                            {\"search\": ...}\n                            Matches corrections by a specific search query.\n                            String\n                            {\"search\": \"somesearchterm\"}\n\n                            {\"locale\": ...}\n                            Matches corrections by language.\n                            Locale\n                            {\"locale\": \"nl\"} or {\"locale\": [\"nl\", \"fr\"]}\n\n                            {\"type\": ...}\n                            Matches corrections by type.\n                            Correction Type\n                            {\"type\": \"missing_photo\"}\n\n                            {\"createdBy\": ...}\n                            Matches corrections by user.\n                            Medipim user ID\n                            {\"createdBy\": 1}\n\n                            {\"createdAt\": ...}\n                            Matches corrections created since the given time.\n                            Unix timestamp.\n                            {\"createdAt\": 1471525605} or {\"createdAt\": {\"from\": 1471525605, \"until\": 1571525605}}\n\n                            {\"and\": [...]}\n                            Matches corrections that match all the given filters.\n                            A list of filters.\n                            {\"and\": [{\"product\": \"M1A2B3C4D5\"}, {\"search\": \"test\"}]}\n\n                            {\"or\": [...]}\n                            Matches corrections that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"product\": \"M1A2B3C4D5\"}, {\"search\": \"test\"}]}\n\n                            {\"not\": ...}\n                            Matches corrections that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"status\": \"open\"}}\n\n                            Sorting\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"touchedAt\": ...}\n                            Sort by last updated time\n                            \"ASC\" or \"DESC\"\n                            {\"touchedAt\": \"ASC\"} or {\"touchedAt\": \"DESC\"}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total number of corrections (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]:\n\n                        id: Medipim ID of the correction (integer, unique)\n\n                        product: Medipim ID of the product (string)\n\n                                                locale: Language of the correction (string)\n\n                        type: Correction Type (string)\n\n                        text: Feedback text (string)\n\n                        status: Correction status (\n                                                                    open,                                                                     in_progress,                                                                     solved,                                                                     closed                                                                )\n\n                            meta:\n\n                                createdAt: When the correction was added to Medipim. (unix timestamp)\n\n                                updatedAt: The last time the correction was modified. (unix timestamp)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all corrections with \"open\" status"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/corrections/types",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_corrections_types.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "corrections",
      "endpoint": "types",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/corrections/types",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/corrections/types\n\n            Headers\n\n                Authorization"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total number of correction types (integer)\n\n                    results[]:\n\n                        id: ID of the correction type (string)\n\n                        name.{...}: Name of the correction type (string, localized)\n\n            Notice\n\n            The \"obsolete_description\" and \"obsolete_photo\" have been removed in favor of the \"wrong_description\" and \"wrong_photo\" types.\n\n            We still support the old values but they will automatically be converted to the more favorable type."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch list of correction types"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/media/create-link",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_media_create-link.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "media",
      "endpoint": "create-link",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/media/create-link",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/media/create-link\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    data:\n\n                        published: Whether the media item is published. (boolean, optional)\n\n                        linkType: Link type. (&quot;app&quot;, &quot;brochure&quot;, &quot;video&quot;, &quot;website&quot;, required)\n\n                        url: Url for the link (string, required)\n\n                        locales[]: List of languages for which this media is suited. (string[], required)\n\n                        targetGroups[]: List of target groups for which this media is suited. (string[], required)\n\n                        name.{...}: Name of the link (string, required, localized)\n\n                        description.{...}: Description of the link (string, optional, localized)\n\n                        availableFrom: When the media is available. (unix timestamp, required)\n\n                        availableUntil: The last time the media is available. (unix timestamp, optional)\n\n                products[]: List of Medipim product IDs (string[], optional)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    mediaItem:\n\n                        id, ... : media information (same as media query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/media/find",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_media_find.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "media",
      "endpoint": "find",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/media/find",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/media/find\n\n            Headers\n\n                Authorization\n\n            Parameters\n\n            Fields to identify the media you want to get:\n\n                id: Medipim ID of the media item (integer)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    mediaItem:\n\n                        id, ... : media information (same as media query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/media/get-fields",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_media_get-fields.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "media",
      "endpoint": "get-fields",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/media/get-fields",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/media/get-fields\n\n            Headers\n\n                Authorization"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    fields[]: List of media fields\n\n                        code: Field code product (string)\n\n                        type: Field type (string)\n\n                        isMulti: If field can have multiple values (boolean)\n\n                        isLocalized: If field has localized data (boolean)\n\n                        allowedToUpdate: If your user is allowed to update the product field (boolean)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/media/publish",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_media_publish.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "media",
      "endpoint": "publish",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/media/publish",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/media/publish\n\n            Headers\n\n                Authorization\n\n            Body\n\n                mediaItem: Medipim ID of the media item (integer, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    mediaItem:\n\n                        id, ... : media information (same as media query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/media/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_media_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "media",
      "endpoint": "query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/media/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/media/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (required)\n\n                sorting: one of the sortings below. (required)\n\n                    page (required)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"published\": ...}\n                            Matches media by published state.\n                            Boolean\n                            {\"published\": true}\n\n                            {\"organization\": ...}\n                            Matches media by organization.\n                            Medipim organization ID\n                            {\"organization\": \"1\"}\n\n                            {\"targetGroup\": ...}\n                            Matches media by target group(s).\n                            One or more target groups\n                            {\"targetGroup\": \"doctor\"} or {\"targetGroup\": [\"pharmacist\", \"doctor\"]}\n\n                            {\"type\": ...}\n                            Matches media by type.\n                            Media type \n Possible values:\n                                                                    \"photo\",                                                                     \"frontal\",                                                                     \"link\"                                                                .\n                            {\"type\": \"photo\"}\n\n                            {\"photoType\": ...}\n                            Matches media by photo type.\n                            Photo type.\n                            {\"photoType\": \"packshot\"}\n\n                            {\"linkType\": ...}\n                            Matches media by link type.\n                            Link type.\n                            {\"linkType\": \"brochure\"}\n\n                            {\"visibleSides\": ...}\n                            Matches media by visible side.\n                            The available visible sides you can find here\n                            {\"visibleSides\": \"front\"} or {\"visibleSides\": [\"front\", \"left\"]}\n\n                            {\"createdAt\": ...}\n                            Matches media created since the given time.\n                            Unix timestamp.\n                            {\"createdAt\": 1471525605} or {\"createdAt\": {\"from\": 1471525605, \"until\": 1571525605}}\n\n                            {\"updatedSince\": ...}\n                            Matches media updated since the given time.\n                            Unix timestamp.\n                            {\"updatedSince\": 1471525605} or {\"updatedSince\": {\"from\": 1471525605, \"until\": 1571525605}}\n\n                            {\"product\": ...}\n                            Matches media by product.\n                            Medipim product ID.\n                            {\"product\": \"M5489B0D8B\"}\n\n                            {\"available\": ...}\n                            Matches media by availability.\n                            Boolean\n                            {\"available\": true}\n\n                            {\"locale\": ...}\n                            Matches media by locale.\n                            One or more locales\n                            {\"locale\": \"en\"} or {\"locale\": [\"en\", \"fr\"]}\n\n                            {\"and\": [...]}\n                            Matches media that match all the given filters.\n                            A list of filters.\n                            {\"and\": [{\"published\": true}, {\"type\": \"photo\"}]}\n\n                            {\"or\": [...]}\n                            Matches media that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"type\": \"photo\"}, {\"type\": \"frontal\"}]}\n\n                            {\"not\": ...}\n                            Matches media that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"type\": \"photo\"}}\n\n                            Sorting\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Sort by Medipim ID\n                            \"ASC\" or \"DESC\"\n                            {\"id\": \"ASC\"} or {\"id\": \"DESC\"}\n\n                            {\"createdAt\": ...}\n                            Sort by created time\n                            \"ASC\" or \"DESC\"\n                            {\"createdAt\": \"ASC\"} or {\"createdAt\": \"DESC\"}\n\n                            {\"touchedAt\": ...}\n                            Sort by last updated time\n                            \"ASC\" or \"DESC\"\n                            {\"touchedAt\": \"ASC\"} or {\"touchedAt\": \"DESC\"}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total results across all pages. (The maximum number is limited to 10000; use the stream endpoint to get all results) (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]: a list of all media\n\n                            mediaItem\n\n                                id: Medipim ID of the media item (integer, unique)\n\n                                type: Type of media (\"photo\" or \"link\")\n\n                                locales[]: List of languages for which this media is suited. (string[])\n\n                                targetGroups[]: List of target groups for which this media is suited. (string[])\n\n                                    meta:\n\n                                        createdAt: When the brand was created on Medipim (unix timestamp)\n\n                                        updatedAt: when the brand information was last updated (unix timestamp)\n\n                            For photos\n\n                                photoType: Type of the photo (string)\n\n                                formats[]: List of available image formats\n\n    thumbnail: Media url for the thumbnail image format of the photo. 200x200 pixels. (string)\n\n    thumbnailWebp: Media url for the thumbnail image format of the photo. 200x200 pixels. (string)\n\n    huge: Media url for the huge image format of the photo. 1500x1500 pixels. (string)\n\n    hugeWebp: Media url for the huge image format of the photo. 1500x1500 pixels. Webp variant. (string)\n\n    large: Media url for the large image format of the photo. 900x900 pixels. (string)\n\n    largeWebp: Media url for the large image format of the photo. 900x900 pixels. Webp variant. (string)\n\n    medium: Media url for the medium image format of the photo. 450x450 pixels. (string)\n\n    mediumWebp: Media url for the medium image format of the photo. 450x450 pixels. Webp variant. (string)\n\n                                visibleSides[]: Visible sides of the photo (string)\n\n                            For frontals\n\n                                photoType: Type of the photo (string)\n\n                                formats[]: List of available image formats\n\n    thumbnail: Media url for the thumbnail image format of the photo. 200x200 pixels. (string)\n\n    thumbnailWebp: Media url for the thumbnail image format of the photo. 200x200 pixels. (string)\n\n    medium: Media url for the medium image format of the photo. 450x450 pixels. (string)\n\n    mediumJpeg: Media url for the medium image format of the photo. 450x450 pixels. (string)\n\n    mediumWebp: Media url for the medium image format of the photo. 450x450 pixels. Webp variant. (string)\n\n    largeJpg: Media url for the large image format of the photo. 900x900 pixels. (string)\n\n    largeWebp: Media url for the large image format of the photo. 900x900 pixels. Webp variant. (string)\n\n    huge: Media url for the huge image format of the photo. 1500x1500 pixels. (string)\n\n    hugeWebp: Media url for the huge image format of the photo. 1500x1500 pixels. Webp variant. (string)\n\n                            For links\n\n                                linkType: Link type (string)\n\n                                url: Url for the link (string)\n\n                                name.{...}: Name of the link (string, localized)\n\n                                description.{...}: Description of the link (string, localized)\n\n                                    available:\n\n                                        from: When the media is available. (unix timestamp)\n\n                                        until: The last time the media is available. (unix timestamp)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all available, published media for \"pharmacist\" or \"doctor\" target group\n\n            Fetch all media items with a visible side front and left."
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/media/stream",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_media_stream.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "media",
      "endpoint": "stream",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/media/stream",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/media/stream\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: see POST /v4/media/query\n\n                sorting: see POST /v4/media/query"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n            Each line of the response contains a single result. The response should be read line by line, and each\n                line JSON decoded separately. Each line ends with a newline character (\\n).\n            Each successful result is formatted like this:\n\n                {\"meta\": {\"total\": 2, \"index\": 0}, \"result\": {\"id\": 1, ...}}\n                {\"meta\": {\"total\": 2, \"index\": 1}, \"result\": {\"id\": 2, ...}}\n\n                    meta:\n\n                        total: Total number of results. (integer)\n\n                        index: Index of this result in the entire result set. (integer)\n\n                    result:\n\n                        id, ...: media information (same as media query results)\n\n            If no results are found matching the filter, the response will have status 204 (= no content)."
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/media/unpublish",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_media_unpublish.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "media",
      "endpoint": "unpublish",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/media/unpublish",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/media/unpublish\n\n            Headers\n\n                Authorization\n\n            Body\n\n                mediaItem: Medipim ID of the media item (integer, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    mediaItem:\n\n                        id, ... : media information (same as media query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/media/update",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_media_update.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "media",
      "endpoint": "update",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/media/update",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/media/update\n\n            Headers\n\n                Authorization\n\n            Body\n\n                mediaItem: Medipim ID of the media item (integer, required)\n\n                    data:\n\n                        published: Whether or not the media item is published. (boolean)\n\n                        locales[]: List of languages for\n                            which this media is suited. (string[])\n\n                        targetGroups[]: List of target\n                                groups for which this media is suited. (string[])\n\n                    For photos\n\n                        photoType: Photo type.\n                            (&quot;packshot&quot;, &quot;productshot&quot;, &quot;lifestyle_image&quot;, &quot;pillshot&quot;)\n\n                        visibleSides[]: Visible sides of the subject. type.\n                            (&quot;front&quot;, &quot;left&quot;, &quot;right&quot;, &quot;back&quot;, &quot;bottom&quot;, &quot;top&quot;)\n\n                    For links\n\n                        linkType: Link type. (&quot;app&quot;, &quot;brochure&quot;, &quot;video&quot;, &quot;website&quot;, required)\n\n                        url: Url for the link (string)\n\n                        name.{...}: Name of the link (string, localized)\n\n                        description.{...}: Description of the link (string, localized)\n\n                        availableFrom: When the media is available. (unix timestamp)\n\n                        availableUntil: The last time the media is available. (unix timestamp)\n\n                Please check to see which fields you are allowed to\n                        update through the api."
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    mediaItem:\n\n                        id, ... : media information (same as media query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/media/upload",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_media_upload.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "media",
      "endpoint": "upload",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/media/upload",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/media/upload\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    file:\n\n                        name: Name of the media file (string, required)\n\n                        content: Base64 encoded content of the file (string, required)\n\n                products[]: List of Medipim product IDs (string[], optional)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    mediaItem:\n\n                        id, ... : media information (same as media query results)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "You can upload images to Medipim through the API.\nWhat do you need?\n\n            Name (Correct version with shortcodes)\n\n            Content: Base64 encoded content of the file\n\n            Products: The different products the image should be linked to (Medipim ID)\n\n            Upload media"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/organizations/check-subscription",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_organizations_check-subscription.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "organizations",
      "endpoint": "check-subscription",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/organizations/check/subscription",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/organizations/check/subscription\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: same filters as the query endpoint. (required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                organization: Medipim ID of the organization (integer)\n\n                name: Name of the organization (string)\n\n                    activeSubscriptions[]: List of active subscriptions for organization\n\n                        type: Subscription type id (string)\n\n                        name.{...}: Name of the subscription type (string, localized)\n\n                        start: When the subscription starts (unix timestamp)\n\n                        end: When the subscription ends (unix timestamp)\n\n                    apiKeys: List of API keys associated with the organization users\n\n                        id: API key ID (integer)\n\n                        user: Medipim ID of associated user (integer)\n\n                        name: Text describing what the API key should be used for (string)\n\n                        secret: Text hash that is used to indentify the API key (string)\n\n                        isEnabled: Status of the API key  (boolean)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/organizations/create",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_organizations_create.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "organizations",
      "endpoint": "create",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/organizations/create",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/organizations/create\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    settings:\n\n                        isPublic: Flag to determine if the organization can be publicly seen in Medipim (boolean, optional; default is true)\n\n                    profile:\n\n                        name: Name of the organization (string, required)\n\n                        address: Street address of the organization (string, optional)\n\n                        zipCode: Zip code of the city (string, optional)\n\n                        region: Subdivision code of the region (string, optional)\n\n                        city: Name of the city (string, optional)\n\n                        country: ISO2 code of the country where the organization is located (string, optional)\n\n                        phone: Telephone number (string, optional)\n\n                        url: Url of organization website (string, optional)\n\n                        type: Type of organization (\n                                                            \"supplier\",                                                             \"marketing\",                                                             \"medical_professional\",                                                             \"other\"                                                        , optional)\n\n                        vatNr: VAT number (string, optional)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    organization:\n\n                        id, type, ...: organization information (same as organizations query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/organizations/find",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_organizations_find.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "organizations",
      "endpoint": "find",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/organizations/find",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/organizations/find\n\n            Headers\n\n                Authorization\n\n            Parameters\n\n            Fields to identify the organization you want to get:\n\n                id: Medipim ID of the organization (integer)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    organisationItem:\n\n                        id, type, ...: organization information (same as organizations query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/organizations/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_organizations_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "organizations",
      "endpoint": "query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/organizations/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/organizations/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                sorting: one of the sortings below. (optional; default is {\"id\": \"ASC\"})\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Matches organizations by Medipim ID.\n                            One or more IDs\n                            {\"id\": 1} or {\"id\": [1, 2]}\n\n                            {\"type\": ...}\n                            Matches organizations by type.\n                            type: Type of organization (\n                                                                            \"supplier\",                                                                             \"marketing\",                                                                             \"medical_professional\",                                                                             \"other\"                                                                        )\n                            {\"type\": \"supplier\"}\n\n                            {\"name\": ...}\n                            Matches organizations by name.\n                            String\n                            {\"name\": \"Medipim\"}\n\n                            {\"searchName\": ...}\n                            Matches organizations by searching their name.\n                            String\n                            {\"searchName\": \"Pharma\"}\n\n                            {\"specializations\": ...}\n                            Matches organizations by their specializations.\n                            One or more Medipim public category IDs\n                            {\"specializations\": 1} or {\"specializations\": [1, 2]}\n\n                            {\"vatNr\": ...}\n                            Matches organizations by the VAT number.\n                            String\n                            {\"vatNr\": \"BE0123321123\"}\n\n                            {\"and\": [...]}\n                            Matches organizations that match all of the given filters.\n                            A list of filters.\n                            {\"and\": [{\"searchName\": \"Pharma\"}, {\"type\": \"supplier\"}]}\n\n                            {\"or\": [...]}\n                            Matches organizations that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"type\": \"supplier\"}, {\"type\": \"medical_professional\"}]}\n\n                            {\"not\": ...}\n                            Matches organizations that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"type\": \"supplier\"}}\n\n                            Sorting\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Sort by Medipim ID\n                            \"ASC\" or \"DESC\"\n                            {\"id\": \"ASC\"} or {\"id\": \"DESC\"}\n\n                            {\"name\": ...}\n                            Sort by name\n                            \"ASC\" or \"DESC\"\n                            {\"name\": \"ASC\"} or {\"name\": \"DESC\"}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta\n\n                        total: total number of organizations (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]\n\n                        id: Medipim ID of the organization (integer, unique)\n\n                        name: Name of the organization (string)\n\n                        type: Type of organization (\n                                                                    \"supplier\",                                                                     \"marketing\",                                                                     \"medical_professional\",                                                                     \"other\"                                                                )\n\n                        brands[]: List of associated Medipim brand IDs (integer[])\n\n                        productFamilies[]: List of associated Medipim product family IDs (integer[])\n\n                            meta:\n\n                                createdAt: When the organization was created on Medipim (unix timestamp)\n\n                                updatedAt: when the organization information was last updated (unix timestamp)\n\n                            contactInformation: Only available when the organisation type equals supplier.\n\n                                address: Street address of the organization (string, optional)\n\n                                zipCode: Zip code of the city (string, optional)\n\n                                city: Name of the city (string, optional)\n\n                                    region: Name of the region (object, optional)\n\n                                        value: the subdivision code of the region(string)\n\n                                        label: the label of the region (string)\n\n                                country: ISO2 code of the country where the organization is located (string, optional)\n\n                                url: Url of organization website (string, optional)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all organizations with \"Pharma\" in their name\n\n                    Fetch addresses and urls of organization type supplier\n\n                Example response:\n\n{\n\"id\": 44,\n\"name\": \"Pierre Fabre\",\n\"type\": \"supplier\",\n\"brands\": [\n166,\n],\n\"productFamilies\": [],\n\"meta\": {\n\"createdAt\": null,\n\"updatedAt\": 1565008508\n},\n\"contactInformation\": {\n    \"address\": \"1 rue Henri-Joseph Genesse\",\n    \"city\": \"Brussel\",\n    \"zipcode\": \"1070\",\n    \"region\": {\n        \"value\": \"BE-VOV\",\n        \"label\": \"Oost-Vlaanderen\"\n    },\n    \"country\": \"BE\",\n    \"url\": \"https://www.pierre-fabre.be\"\n}"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/product-families/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_product-families_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "product-families",
      "endpoint": "query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/product-families/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/product-families/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                sorting: one of the sortings below. (optional; default is {\"id\": \"ASC\"})\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Matches product families by Medipim ID.\n                            One or more IDs\n                            {\"id\": 1} or {\"id\": [1, 2]}\n\n                            {\"search\": ...}\n                            Matches product families by a specific search query.\n                            String\n                            {\"search\": \"somesearchterm\"}\n\n                            {\"and\": [...]}\n                            Matches product families that match all of the given filters.\n                            A list of filters.\n                            {\"and\": [{\"id\": 1}, {\"search\": \"test\"}]}\n\n                            {\"or\": [...]}\n                            Matches product families that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"id\": 1}, {\"search\": \"test\"}]}\n\n                            {\"not\": ...}\n                            Matches product families that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"id\": 1}}\n\n                            Sorting\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Sort by Medipim ID\n                            \"ASC\" or \"DESC\"\n                            {\"id\": \"ASC\"} or {\"id\": \"DESC\"}\n\n                            {\"name\": ...}\n                            Sort by Name\n                            \"ASC\" or \"DESC\"\n                            {\"name\": \"ASC\"} or {\"name\": \"DESC\"}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total number of product families (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]:\n\n                        id: Medipim ID of the product family (integer)\n\n                        name.{...}: Name of the product family (string)\n\n                            meta:\n\n                                createdAt: When the product family was created on Medipim (unix timestamp)\n\n                                updatedAt: when the product family information was last updated (unix timestamp)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all product families"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/add-media",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_add-media.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "add-media",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/products/add-media",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/products/add-media\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    product: one of the following (required)\n\n                        Medipim product ID (string)\n\n                        Key value array containing the identifier field and value (array)\n\n                media: ID of the media item (integer, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    product:\n\n                        id, ...: product information (same as products query results)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Add media to product using product ID"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/attributes/find",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_attributes_find.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "attributes/find",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/product/attributes/find",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/product/attributes/find\n\n            Headers\n\n                Authorization\n\n            Parameters\n\n            Fields to identify the product attribute you want to get:\n\n                id: Medipim ID of the attribute (integer)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    newsItem:\n\n                        id, code, ...: attribute information (same as attribute query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/attributes/options/find",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_attributes_options_find.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "attributes/options/find",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/product/attribute/options/find",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/product/attribute/options/find\n\n            Headers\n\n                Authorization\n\n            Parameters\n\n            Fields to identify the product attribute option you want to get:\n\n                id: Medipim ID of the attribute option (integer)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    attributeOption:\n\n                        id, type, ...: option information (same as attribute options query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/attributes/options/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_attributes_options_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "attributes/options/query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/product/attribute/options/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/product/attribute/options/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                sorting: one of the sortings below. (optional; default is {\"id\": \"ASC\"})\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Matches attribute options by Medipim ID.\n                            Integer\n                            {\"id\": 1}\n\n                            {\"attribute\": ...}\n                            Matches attribute options by attribute ID.\n                            Medipim attribute ID\n                            {\"attribute\": 1}\n\n                            {\"type\": ...}\n                            Matches attribute options by attribute code.\n                            Medipim attribute code\n                            {\"type\": \"color\"}\n\n                            {\"and\": [...]}\n                            Matches attribute options that match all of the given filters.\n                            A list of filters.\n                            {\"and\": [{\"id\": 1}, {\"attribute\": 1}]}\n\n                            {\"or\": [...]}\n                            Matches attribute options that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"attribute\": 1}, {\"attribute\": 2}]}\n\n                            {\"not\": ...}\n                            Matches attribute options that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"attribute\": 1}}\n\n                            Sorting\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Sort by Medipim ID\n                            \"ASC\" or \"DESC\"\n                            {\"id\": \"ASC\"} or {\"id\": \"DESC\"}\n\n                            {\"name\": ...}\n                            Sort by Name\n                            \"ASC\" or \"DESC\"\n                            {\"name\": \"ASC\"} or {\"name\": \"DESC\"}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total number of attribute options (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]:\n\n                        id: Medipim ID of the option (integer, unique)\n\n                        type: Code of the attribute (string)\n\n                        name.{...}: Name of the option (string, localized)\n\n                            meta:\n\n                                createdAt: When the option was created on Medipim (unix timestamp)\n\n                                updatedAt: when the option information was last updated (unix timestamp)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all \"color\" attribute options"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/attributes/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_attributes_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "attributes/query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/product/attributes/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/product/attributes/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                sorting: one of the sortings below. (optional; default is {\"id\": \"ASC\"})\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Matches attributes by Medipim ID.\n                            One or more Medipim IDs\n                            {\"id\": 1} or {\"id\": [1, 2]}\n\n                            {\"code\": ...}\n                            Matches attributes by code.\n                            One or more attribute codes\n                            {\"code\": \"color\"} or {\"code\": [\"color\", \"galenic_shape\"]}\n\n                            {\"and\": [...]}\n                            Matches attributes that match all of the given filters.\n                            A list of filters.\n                            {\"and\": [{\"id\": 1}, {\"code\": \"color\"}]}\n\n                            {\"or\": [...]}\n                            Matches attributes that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"id\": 1}, {\"code\": \"color\"}]}\n\n                            {\"not\": ...}\n                            Matches attributes that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"id\": 1}}\n\n                            Sorting\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Sort by Medipim ID\n                            \"ASC\" or \"DESC\"\n                            {\"id\": \"ASC\"} or {\"id\": \"DESC\"}\n\n                            {\"name\": ...}\n                            Sort by Name\n                            \"ASC\" or \"DESC\"\n                            {\"name\": \"ASC\"} or {\"name\": \"DESC\"}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total number of attributes (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]:\n\n                        id: Medipim ID of the attribute (integer, unique)\n\n                        code: (unique) code of attribute (string)\n\n                        name.{...}: Name of the attribute (string, localized)\n\n                            meta:\n\n                                createdAt: When the attribute was created on Medipim (unix timestamp)\n\n                                updatedAt: when the attribute information was last updated (unix timestamp)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all attributes"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/create",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_create.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "create",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/products/create",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/products/create\n\n            Headers\n\n                Authorization\n\n            Body\n\n                organizations[]: The full list of organization\n                    IDs that should be associated with this product.\n\n                    product: Name and identifier code are required fields to create products. It is advised to check if the code doesn’t already exist in the database. This is valid to check to be certain double products aren’t created. The rest of the fields are optional.\n\n                        status: Product status\n                            (\n                                                            active,                                                             inactive,                                                             replaced,                                                             no_selection                                                        )\n\n                        replacement: Medipim ID of the replacing product (only in case product status\n                            is \"replaced\")\n\n                        name.{...}: Name (string, localized)\n\n                        seoName.{...}: SEO friendly name (string, localized)\n\n                                                                                                officialDeletionAt: Official date on which the product became unavailable. (unix\n                                timestamp)\n\n                                                    ean[]: EAN codes (⚠️ a product may have multiple EAN codes)\n                                (integer[])\n\n                            gtin: GTIN code (integer) (⚠️ use ean field\n                                instead)\n\n                                                                        hsCode: Harmonised System (HS) code (integer)\n\n                        supplierReference: Supplier reference code (string)\n\n                                                    pbs: Pharmaceutical Benefits Scheme (PBS) code (string)\n\n                            atc: ATC code (string)\n                            (⚠️ deprecated use atcCategory instead)\n\n                        atcCategory[]: List of ATC category codes associated with this product (string[])\n\n                        conservation: Conservation for a given product. Possible values:                                 room,                                                             refrigerator,                                                             fresh,                                                             frozen                             (string)\n\n                                                    tax: rate of VAT (float)\n\n                            publicPrice: Public price (integer,\n                                    in $)\n\n                            manufacturerPrice: Manufacturer price\n                                (integer, in $)\n\n                            pharmacistPrice: Pharmacist price\n                                (integer,\n                                    in $)\n\n                                                                        weight: Weight (integer, in grams)\n                            (⚠️ deprecated use weightWithUnit instead)\n\n                        width: Width (integer, in millimeters)\n                            (⚠️ deprecated use widthWithUnit instead)\n\n                        length: Length (integer, in millimeters)\n                            (⚠️ deprecated use lengthWithUnit instead)\n\n                        depth: Depth (integer, in millimeters)\n                            (⚠️ deprecated use depthWithUnit instead)\n\n                            weightWithUnit: Weight(object)\n\n                                value: value (integer)\n\n                                unit: unit (string)\n\n                            widthWithUnit: Length(object)\n\n                                value: value (integer)\n\n                                unit: unit (string)\n\n                            lengthWithUnit: Length(object)\n\n                                value: value (integer)\n\n                                unit: unit (string)\n\n                            depthWithUnit: Length(object)\n\n                                value: value (integer)\n\n                                unit: unit (string)\n\n                        packageContent: Number of packages (integer)\n\n                        packageQuantity: How many units are in the package (string)\n\n                        packagingUnit: Packaging unit (string)\n\n                        publicCategories[]: The full list of publicCategory IDs that should be\n                            associated with this product.\n\n                                                                                                brands[]: The full list of brand IDs\n                            that should be associated with this product.\n\n                        attributes[]: The full list of attributes IDs that should be\n                            associated with this product.\n\n                        activeIngredients[]: The full list of active ingredient IDs that should\n                            be associated with this product.\n\n                Please check to see which fields you are allowed to\n                        update through the api."
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    product:\n\n                        id, name, ...: product information (same format as product search results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/descriptions/create",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_descriptions_create.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "descriptions/create",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/product/descriptions/create",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/product/descriptions/create\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    product: one of the following (required)\n\n                        Medipim product ID (string)\n\n                        Key value array containing the identifier field and value (array)\n\n                    description:\n\n                        targetGroups[]: List of target groups (string[], required)\n\n                        locales[]: List of locales (string[], required)\n\n                        type: Type of the description (string, required)\n\n                        content[]: List of localized content; We allow the content to contain html but we don't allow every tag.\n\n                TIP\n\n                Make sure the amount of localized content matches the provided locales."
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    description:\n\n                        id: Medipim ID of the description (integer)\n\n                        locales[]: List of supported locales (string[])\n\n                        targetGroups[]: List of associated target groups (string[])\n\n                        type: Type of the description (string)\n\n                        content.{...}: List of content (string, localized)\n\n                            meta:\n\n                                createdAt: When the description was created on Medipim (unix timestamp)\n\n                                updatedAt: when the description information was last updated (unix timestamp)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Create description using product ID"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/descriptions/delete",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_descriptions_delete.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "descriptions/delete",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/product/descriptions/delete",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/product/descriptions/delete\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    product: one of the following (required)\n\n                        Medipim product ID (string)\n\n                        Key value array containing the identifier field and value (array)\n\n                id: Medipim description ID (integer, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n            The response will have status 204 (= no content) is everything was successful"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Delete description using product ID"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/descriptions/update",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_descriptions_update.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "descriptions/update",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/product/descriptions/update",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/product/descriptions/update\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    product: one of the following (required)\n\n                        Medipim product ID (string)\n\n                        Key value array containing the identifier field and value (array)\n\n                id: Medipim description ID (integer, required)\n\n                    description:\n\n                        targetGroups[]: List of target groups (string[], required)\n\n                        locales[]: List of locales (string[], required)\n\n                        type: Type of the description (string, required)\n\n                        content[]: List of localized content; We allow the content to contain html but we don't allow every tag.\n\n                TIP\n\n                Make sure the amount of localized content matches the provided locales (or locales already set on the description)."
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    description:\n\n                        id: Medipim ID of the description (integer)\n\n                        locales[]: List of supported locales (string[])\n\n                        targetGroups[]: List of associated target groups (string[])\n\n                        type: Type of the description (string)\n\n                        content.{...}: List of content (string, localized)\n\n                            meta:\n\n                                createdAt: When the description was created on Medipim (unix timestamp)\n\n                                updatedAt: when the description information was last updated (unix timestamp)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Update description using product ID"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/embed",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_embed.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "embed",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/products/embed",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/products/embed\n\n            Headers\n\n                Authorization\n\n                Only provide authorization headers if you are not signing the url (see \"Signing the URL\" below for\n                    more information)\n\n            Parameters\n\n                id: Medipim ID of the product (string, required unless you provide another\n                        identifier)\n\n                locale: language in which the response should\n                    be shown (required, defaults to the primary language of the platform)\n\n            Besides the Medipim ID you can also use any of the unique product identifiers that are available."
        },
        {
          "type": "response",
          "title": "Response",
          "content": "An HTML page presenting product information."
        },
        {
          "type": "section",
          "title": "Signing the URL",
          "content": "If you are embedding this endpoint into a webpage or app, it may not be possible to use HTTP Basic\n                auth.\nIn that case, you can authenticate this request by adding a message authentication\n                    code to the URL.\n\n                Tip\n\n                If you are using the PHP client, you can generate a signed URL using ->createProductEmbedUrl($productId).\n\n                Tip\n\n                The GET /v4/products/find response includes a signed URL.\n\n                Tip\n\n                Example code to generate a signed URL manually:\n\n                $unixTimestamp = time(); // Unix Timestamp\n$productId = 'xxx'; // Product ID\n$apiSecretKey = 'ApikeySecret'; //API key secret;\n$apiKeyId = 'ApiKeyId'; //API key ID\n$message = \"embed:\" . $productId . \":\" . $unixTimestamp;\n\n$mac = hash_hmac(\"sha256\", $message, $apiSecretKey);\n\n$query = http_build_query([\n   \"id\" => (string) $productId,\n   \"t\" => $unixTimestamp,\n   \"key\" => (string) $apiKeyId,\n   \"mac\" => $mac,\n]);\n\nreturn \"https://\" . $this->apiDomain . \"//v4//products//embed?\" . $query;"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/find",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_find.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "find",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/products/find",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/products/find\n\n            Headers\n\n                Authorization\n\n            Parameters\n\n            Fields to identify the product you want to get:\n\n                id: Medipim ID of the product (string, required unless you provide another identifier)\n\n            Besides the Medipim ID you can also use any of the unique product identifiers that are available."
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    brand:\n\n                        id, ...: product information (same as products query results)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch product by Medipim ID"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/get-fields",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_get-fields.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "get-fields",
      "method": "GET",
      "apiUrl": "https://api.au.medipim.com/v4/products/get-fields",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            GET\n\n            URL\n\n            https://api.au.medipim.com/v4/products/get-fields\n\n            Headers\n\n                Authorization"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    fields: List of product fields\n\n                        code: Field code product (string)\n\n                        type: Field type (string)\n\n                        attributeGroup: Field attribute group (string)\n\n                        isMulti: If field can have multiple values (boolean)\n\n                        isLocalized: If field has localized data (boolean)\n\n                        allowedToUpdate: If your user is allowed to update the product field (boolean)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all product fields"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/products/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/products/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and,\n                    or & not. (required)\n\n                sorting: one of the sortings below. (required)\n\n                    page (required)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                        Filter\n                        Description\n                        Parameters\n                        Examples\n\n                        {\"id\": ...}\n                        Matches by product ID.\n                        One or more Medipim product IDs\n                        {\"id\": 1} or {\"id\": [1, 2]}\n\n                        {\"status\": ...}\n                        Matches products by status.\n                        One or more product statuses. \n Possible values: \"active\",\n                            \"replaced\" or \"inactive\".\n\n                        {\"status\": \"active\"} or {\"status\": [\"replaced\", \"inactive\"]}\n\n                        {\"organization\": ...}\n                        Matches products by organization.\n                        One or more organization IDs.\n                        {\"organization\": 2} or {\"organization\": [2, 15]}\n\n                        {\"publicCategory\": ...}\n                        Matches products by public category.\n                        One or more public category IDs.\n                        {\"publicCategory\": 12} or {\"publicCategory\": [3, 6]}\n\n                        {\"brand\": ...}\n                        Matches products by brand.\n                        One or more brand IDs.\n                        {\"brand\": 4} or {\"brand\": [14, 3]}\n\n                        {\"productFamily\": ...}\n                        Matches products by product family.\n                        One or more product family IDs.\n                        {\"productFamily\": 4} or {\"productFamily\": [14, 3]}\n\n                        {\"search\": ...}\n                        Matches products by a specific search query.\n                        Array with 'query', 'locale' and (optional) 'type'\n                            key.\n\n                        {\"search\": {\"query\": \"my query\", \"locale\": \"en\", \"type\": \"contains\"}}\n\n                        {\"minimumContent\": ...}\n                        Matches products with an image AND a description AND a public category.\n                        true or false.\n                        {\"minimumContent\": true} or {\"minimumContent\": false}\n\n                        {\"hasContent\": ...}\n                        Matches products that have specific content.\nCheck field glossary for more info.\n\n                        Array with 'flag' and 'locale' key.\n                        {\"hasContent\": {\"flag\": \"name\", \"locale\": \"en\"}}\n\n                            {\"ean\": ...}\n                            Matches products with specified EAN\n                                number.\n\n                            One or more EAN codes\n                            {\"ean\": \"3574660696318\"} or {\"ean\": [\"01234567\", \"123456789012\",\n                                \"3401526293056\", ...]}\n\n                            {\"gtin\": ...}\n                            Matches products with specified GTIN\n                                number.\n(⚠️ deprecated use ean14 filter instead)\n\n                            One or more GTIN codes\n                            {\"gtin\": \"03664798014846\"} or {\"gtin\": [\"03664798014846\",\n                                    \"07613326014816\", ...]}\n\n                            {\"eanGtin8\": ...}\n                            Matches products with specified EAN8\n                                number.\n\n                            One or more EAN/GTIN codes\n                            {\"eanGtin8\": \"01234567\"} or {\"eanGtin8\": [\"01234567\", \"87654321\",\n                                    ...]}\n\n                            {\"eanGtin12\": ...}\n                            Matches products with specified EAN12\n                                number.\n\n                            One or more EAN/GTIN codes\n                            {\"eanGtin12\": \"123456789012\"} or {\"eanGtin12\": [\"123456789012\",\n                                    \"210987654321\",\n                                    ...]}\n\n                            {\"eanGtin13\": ...}\n                            Matches products with specified EAN13\n                                number.\n\n                            One or more EAN/GTIN codes\n                            {\"eanGtin13\": \"0012345678901\"} or {\"eanGtin13\": [\"0012345678901\",\n                                    \"3210987654321\", ...]}\n\n                            {\"eanGtin14\": ...}\n                            Matches products with specified EAN14\n                                    /\n                                    GTIN number.\n\n                            One or more EAN/GTIN codes\n                            {\"eanGtin14\": \"01234567890123\"} or {\"eanGtin14\": [\"01234567890123\",\n                                    \"43210987654321\", ...]}\n\n                        {\"hsCode\": ...}\n                        Matches products with specified HS code.\n                        String or integer\n                        {\"hsCode\": \"010203\"} or {\"hsCode\": [\"010203\", \"010204\", ...]}\n\n                            {\"artgId\": ...}\n                            Matches products with specified ARTG ID\n                            String.\n                            {\"artgId\": \"240904\"}\n\n                            {\"pbs\": ...}\n                            Matches products with specified PBS code.\n\n                            String\n                            {\"pbs\": \"123A\"} or {\"pbs\": [\"123A\", \"12345A\", ...]}\n\n                            {\"fred\": ...}\n                            Matches products with specified fred code.\n\n                            String\n                            {\"fred\": \"123A\"} or {\"fred\": [\"123A\", \"12345A\", ...]}\n\n                            {\"zCode\": ...}\n                            Matches products with specified zCode code.\n\n                            String\n                            {\"zCode\": \"123A\"} or {\"zCode\": [\"123A\", \"12345A\", ...]}\n\n                            {\"snomedMp\": ...}\n                            Matches products with specified snomedMp\n                                code.\n\n                            String\n                            {\"snomedMp\": \"21433011000036107\"} or {\"snomedMp\":\n                                    [\"21433011000036107\", \"21433011000036107\", ...]}\n\n                            {\"snomedMpp\": ...}\n                            Matches products with specified snomedMpp\n                                code.\n\n                            String\n                            {\"snomedMpp\": \"21433011000036107\"} or {\"snomedMpp\":\n                                    [\"21433011000036107\", \"21433011000036107\", ...]}\n\n                            {\"snomedMpuu\": ...}\n                            Matches products with specified snomedMpuu\n                                code.\n\n                            String\n                            {\"snomedMpuu\": \"21433011000036107\"} or {\"snomedMpuu\":\n                                    [\"21433011000036107\", \"21433011000036107\", ...]}\n\n                            {\"snomedTp\": ...}\n                            Matches products with specified snomedTp\n                                code.\n\n                            String\n                            {\"snomedTp\": \"21433011000036107\"} or {\"snomedTp\":\n                                    [\"21433011000036107\", \"21433011000036107\", ...]}\n\n                            {\"snomedTpp\": ...}\n                            Matches products with specified snomedTpp\n                                code.\n\n                            String\n                            {\"snomedTpp\": \"21433011000036107\"} or {\"snomedTpp\":\n                                    [\"21433011000036107\", \"21433011000036107\", ...]}\n\n                            {\"snomedTpuu\": ...}\n                            Matches products with specified snomedTpuu\n                                code.\n\n                            String\n                            {\"snomedTpuu\": \"21433011000036107\"} or {\"snomedTpuu\":\n                                    [\"21433011000036107\", \"21433011000036107\", ...]}\n\n                            {\"snomedCtpp\": ...}\n                            Matches products with specified snomedCtpp\n                                code.\n\n                            String\n                            {\"snomedCtpp\": \"21433011000036107\"} or {\"snomedCtpp\":\n                                    [\"21433011000036107\", \"21433011000036107\", ...]}\n\n                        {\"activeIngredient\": ...}\n                        Matches products by active ingredients.\n                        One or more activeIngredient IDs.\n                        {\"activeIngredient\": [1, 2]}\n\n                        {\"conservation\": ...}\n                        Matches products by conservation.\n                        One or more conservation types. \n Possible values:                                 room,                                                             refrigerator,                                                             fresh,                                                             frozen                             (string)\n\n                        {\"conservation\":\"room\"} or {\"conservation\": [\"room\", \"frozen\",\n                                ...]}\n\n                        {\"allowedSpecies\": ...}\n                        Matches products by allowed species.\n                        One or more species \n Possible values: `\"human\"`, `\"veterinary\"`,\n                            `\"surface_maintenance\"` or `\"phytopharmacy\"`.\n\n                        {\"allowedSpecies\":\"human\"} or {\"allowedSpecies\": [\"human\", \"veterinary\",\n                                ...]}\n\n                        {\"atcCategory\": ...}\n                        Matches products with specified ATC category code.\n                        One or more ATC category IDs.\n                        {\"atcCategory\": \"BC01D\"} or {\"atcCategory\": [\"BC01D\", \"A1\", ...]}\n\n                            {\"gs1Category\": ...}\n                            Matches products by GS1 category.\n                            One or GS1 category codes.\n                            {\"gs1Category\": \"10000002\"} or {\"gs1Category\": [\"10000016\",\n                                    \"10000002\"]}\n\n                        {\"narcotic\": ...}\n                        Matches products that are either marked as narcotics or not.\n                        true or false.\n                        {\"narcotic\": true} or {\"narcotic\": false}\n\n                        {\"biocide\": ...}\n                        Matches products that are either marked as biocides or not.\n                        true or false.\n                        {\"biocide\": true} or {\"biocide\": false}\n\n                        {\"attributes\": ...}\n                        Matches products by attribute\n                                options.\n\n                        One or more attribute option IDs.\n                        {\"attributes\": 1} or {\"attributes\": [1,2]}\n\n                        {\"notApplicableField\": ...}\n                        Matches products by not applicable fields.\n                        One or more fields\n                        {\"notApplicableField\": \"productFamily\"} or {\"notApplicableField\":\n                                [\"productFamily\", \"brand\"]}\n\n                        {\"officialDeletionAt\": ...}\n                        Matches products with a specific commercial end date.\n                        Unix timestamp.\n                        {\"officialDeletionAt\": 1471525605} or {\"officialDeletionAt\": {\"from\":\n                                1471525605, \"until\": 1571525605}}\n\n                        {\"createdAt\": ...}\n                        Matches products created since the given time.\n                        Unix timestamp.\n                        {\"createdAt\": 1471525605} or {\"createdAt\": {\"from\": 1471525605, \"until\":\n                                1571525605}}\n\n                        {\"updatedSince\": ...}\n                        Matches products updated since the given time.\n                        Unix timestamp.\n                        {\"updatedSince\": 1471525605} or {\"updatedSince\": {\"from\": 1471525605,\n                                \"until\": 1571525605}}\n\n                        {\"and\": [...]}\n                        Matches products that match all the given filters.\n                        A list of filters.\n                        {\"and\": [{\"brand\": [24, 65, ...]}, {\"status\": \"active\"}]}\n\n                        {\"or\": [...]}\n                        Matches products that match any of the given filters.\n                        A list of filters.\n                        {\"or\": [{\"publicCategory\": [2, 16, ...]}, {\"status\": \"active\"}]}\n\n                        {\"not\": ...}\n                        Matches products that do not match the given filter.\n                        A filter.\n                        {\"not\": {\"publicCategory\": 81}}\n\n                        Sorting\n                        Description\n                        Parameters\n                        Examples\n\n                        {\"id\": ...}\n                        Sort by Medipim ID\n                        \"ASC\" or \"DESC\"\n                        {\"id\": \"ASC\"} or {\"id\": \"DESC\"}\n\n                        {\"name\": ...}\n                        Sort by Name\n                        Array containing \"direction\" and \"locale\"\n                        {\"name\": {\"direction\": \"ASC\", \"locale\": \"en\"}} or ...\n\n                            {\"pbs\": ...}\n                            Sort by PBS code\n                            \"ASC\" or \"DESC\"\n                            {\"pbs\": \"ASC\"} or {\"pbs\": \"DESC\"}\n\n                        {\"createdAt\": ...}\n                        Sort by created time\n                        \"ASC\" or \"DESC\"\n                        {\"createdAt\": \"ASC\"} or {\"createdAt\": \"DESC\"}\n\n                        {\"touchedAt\": ...}\n                        Sort by last updated time\n                        \"ASC\" or \"DESC\"\n                        {\"touchedAt\": \"ASC\"} or {\"touchedAt\": \"DESC\"}\n\n                        {\"statusTouchedAt\": ...}\n                        Sort by last time status was updated\n                        \"ASC\" or \"DESC\"\n                        {\"statusTouchedAt\": \"ASC\"} or {\"statusTouchedAt\": \"DESC\"}\n\n                        {\"status\": ...}\n                        Sort by product status\n                        \"ASC\" or \"DESC\"\n                        {\"status\": \"ASC\"} or {\"status\": \"DESC\"}\n\n                Tip\n\n                The maximum amount of identifier codes provided cannot exceed 1000.\nIf your query contains more\n                    than 1000, please break it down into multiple requests with smaller sets."
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                Note\n\n                The maximum number is limited to 10000; use the stream\n                    endpoint to get all results\n\n                    meta:\n\n                        total: total number of products across all pages. (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first product in the entire result set (integer)\n\n                                size: size of the page (integer)\n\n                    results[]: a list of matching products on this page.\n\n                        id: Medipim ID of the product (string, unique)\n\n                        status: Product status (\n                                                            active,                                                             inactive,                                                             replaced,                                                             no_selection                                                        )\n\n                                                replacement: Medipim ID of the replacing product (only in case product status\n                            is \"replaced\") (string)\n\n                        name.{...}: Name (string, localized)\n\n                        seoName.{...}: SEO friendly name (string, localized)\n\n                                                requiresLegalText: Product requires a legal text (description) to be displayed.\n                            (boolean)\n\n                                                biocide: Product is a biocide.(boolean)\n\n                        officialDeletionAt: Official commercial end date of the product. (unix\n                                timestamp)\n\n                                                    ean[]: EAN codes (integer[])\n\n                            gtin: GTIN code (string)\n                                (⚠️ deprecated use eanGtin14 instead)\n\n                            eanGtin8: EAN8 code\n                                (integer\n                                    with exactly 8 digits, might start with leading zeros)\n\n                            eanGtin12: EAN12 code\n                                (integer\n                                    with exactly 12 digits, might start with leading zeros)\n\n                            eanGtin13: EAN13 code\n                                (integer\n                                    with exactly 13 digits, might start with leading zeros)\n\n                            eanGtin14: EAN14 /\n                                    GTIN code\n                                (integer with exactly 14 digits, might start with leading zeros)\n\n                                                                        supplierReference: The internal reference code that a company gives to a\n                            product (string)\n\n                        hsCode: Harmonised System (HS) code (integer)\n\n                                                    artgId: ARTG ID (string)\n\n                            pbs: PBS code (string)\n\n                            fred: Fred code (string)\n\n                            zCode: Z code (string)\n\n                            snomedMp: SNOMED-MP\n                                code\n                                (string)\n\n                            snomedMpp: SNOMED-MPP\n                                code (string)\n\n                            snomedMpuu: SNOMED-MPUU\n                                code (string)\n\n                            snomedTp: SNOMED-TP\n                                code\n                                (string)\n\n                            snomedTpp: SNOMED-TPP\n                                code (string)\n\n                            snomedTpuu: SNOMED-TPUU\n                                code (string)\n\n                            snomedCtpp: SNOMED-CTPP\n                                code (string)\n\n                                                                                                                                                                        conservationLabel: Description of the type of conservation.\n\n                        conservationMin: Minimum value for the temperature of the type of conservation.\n                            This will be in Celsius, Fahrenheit and Kelvin.\n\n                        conservationMax: Maximum value for the temperature of the type of conservation.\n                            This will be in Celsius, Fahrenheit and Kelvin.\n\n                        conservation: Conservation for a given product.\n                            Possible values:                                 room,                                                             refrigerator,                                                             fresh,                                                             frozen                             (string)\n\n                                                    vat: rate of VAT (float)\n\n                            publicPrice: Public price (integer, in $)&nbsp;&nbsp;(⚠️value\n                                is including VAT)\n\n                            manufacturerPrice: Manufacturer price (integer,\n                                    in $\n                                    )&nbsp;&nbsp;(⚠️value is excluding VAT)\n\n                            pharmacistPrice: Pharmacist price (integer, in $\n                                    )&nbsp;&nbsp;(⚠️value is excluding VAT)\n\n                                                                                                weight: Weight (integer, in grams)\n                            (⚠️ deprecated use weightWithUnit instead)\n\n                            weightWithUnit: Weight(object)\n\n                                value: value (integer)\n\n                                unit: unit (string)\n\n                        width: Width (integer, in millimeters)\n                            (⚠️ deprecated use widthWithUnit instead)\n\n                            widthWithUnit: Length(object)\n\n                                value: value (integer)\n\n                                unit: unit (string)\n\n                        length: Length (integer, in millimeters)\n                            (⚠️ deprecated use lengthWithUnit instead)\n\n                            lengthWithUnit: Length(object)\n\n                                value: value (integer)\n\n                                unit: unit (string)\n\n                        depth: Depth (integer, in millimeters)\n                            (⚠️ deprecated use depthWithUnit instead)\n\n                            depthWithUnit: Length(object)\n\n                                value: value (integer)\n\n                                unit: unit (string)\n\n                        packageContent: Package Content (string)\n\n                        packageQuantity: Package Quantity (integer)\n\n                        packagingUnit: Packaging unit (string)\n\n                            atc: ATC code (string)\n                            (⚠️ deprecated use atcCategory instead)\n\n                        atcCategory[]: List of ATC category codes associated with this product (string[])\n                        notApplicableField[]: List of fields that are not applicable to the product(string[])\n\n                            publicCategories[]: A collection of public categories this product belongs to. | GET /v4/public-categories/query response\n\n                                id: ID of the category (integer)\n\n                                name.{...}: Name of the category (string, localized)\n\n                                parent: ID of the parent category (integer)\n\n                                    meta:\n\n                                        createdAt: When the category was created on Medipim (unix\n                                                timestamp)\n\n                                        updatedAt: When the category information was last updated (unix\n                                                timestamp)\n\n                                gs1Category: GS1 category this product belongs to (if any)\n\n                                    code: Code of the category (string, unique)\n\n                                    level: Level of the category (integer)\n\n                                    parent: Code of the parent category (string)\n\n                                    title: Title of the category (string)\n\n                                    definition: Definition of the category (string)\n\n                                    definitionExcludes: Excludes of the definition of the category(string)\n\n                                    active: Whether the category is active (string)\n\n                                        meta:\n\n                                            createdAt: When the category was created on Medipim (unix\n                                                    timestamp)\n\n                                            updatedAt: When the category information was last updated\n                                                (unix\n                                                    timestamp)\n\n                            brands[]: A collection of brands associated with this product. | POST /v4/brands/query response\n\n                                id: ID of the brand (integer)\n\n                                name.{...}: Name of the brand (string, localized)\n\n                                    meta:\n\n                                        createdAt: When the brand was created on Medipim (unix\n                                                timestamp)\n\n                                        updatedAt: when the brand information was last updated (unix\n                                                timestamp)\n\n                            productFamilies[]: A collection of product families associated with this product. | POST /v4/product-families/query response\n\n                                id: ID of the product family (integer)\n\n                                name.{...}: Name of the product family (string, localized)\n\n                                    meta:\n\n                                        createdAt: When the product family was created on Medipim (unix\n                                                timestamp)\n\n                                        updatedAt: when the product family information was last updated\n                                            (unix timestamp)\n\n                            attributes[]: A collection of attribute values associated with this product. | POST /v4/product/attribute/options/query\n\n                                id: Medipim ID of the option (integer)\n\n                                type: Code of the attribute (string)\n\n                                name.{...}: Name of option (string, localized)\n\n                                    meta:\n\n                                        createdAt: When the option was created on Medipim (unix\n                                                timestamp)\n\n                                        updatedAt: when the option information was last updated (unix\n                                                timestamp)\n\n                            organizations[]: A collection of organizations associated with this product. | POST /v4/organizations/query response\n\n                                id: ID of the organization (integer, unique)\n\n                                name.{...}: Name of the organization (string, localized)\n\n                                type: type of the organization\n                                                                            \"supplier\",                                                                             \"marketing\",                                                                             \"medical_professional\",                                                                             \"other\"                                                                        )\n\n                                    meta:\n\n                                        createdAt: When the organization information was created on\n                                            Medipim (unix timestamp)\n\n                                        updatedAt: When the organization information was last updated\n                                            (unix timestamp)\n\n                                    contactInformation: Only available when the organisation type equals supplier.\n\n                                        address: Street address of the organization (string,\n                                                optional)\n\n                                        zipCode: Zip code of the city (string, optional)\n\n                                        region: Name of the region (string, optional)\n\n                                        city: Name of the city (string, optional)\n\n                                        country: ISO2 code of the country where the organization is\n                                            located (string, optional)\n\n                                        url: Url of organization website (string, optional)\n\n                            activeIngredients[]: A collection of active ingredients associated with this product | GET /v4/active-ingredients/query response\n\n                                id: ID of the active ingredient (integer, unique)\n\n                                name.{...}: Name of the active ingredient (string, localized)\n\n                                    meta:\n\n                                        createdAt: When the active ingredient was created on Medipim\n                                            (unix timestamp)\n\n                                        updatedAt: When the active ingredients was last updated (unix\n                                                timestamp)\n\n                            photos[]: A collection of photos associated with this product. (same as media query results)\n\n                                locales[]: List of languages\n                                    for which this media is suited. (string[])\n\n                                targetGroups[]: List of target\n                                        groups for which this media is suited. (string[])\n\n                                photoType: Type of photo\n                                                                            \"packshot\",                                                                             \"productshot\",                                                                             \"lifestyle_image\",                                                                             \"pillshot\"                                                                        )\n\n                                formats[]: List of available image formats\n\n    thumbnail: Media url for the thumbnail image format of the photo. 200x200 pixels. (string)\n\n    thumbnailWebp: Media url for the thumbnail image format of the photo. 200x200 pixels. (string)\n\n    huge: Media url for the huge image format of the photo. 1500x1500 pixels. (string)\n\n    hugeWebp: Media url for the huge image format of the photo. 1500x1500 pixels. Webp variant. (string)\n\n    large: Media url for the large image format of the photo. 900x900 pixels. (string)\n\n    largeWebp: Media url for the large image format of the photo. 900x900 pixels. Webp variant. (string)\n\n    medium: Media url for the medium image format of the photo. 450x450 pixels. (string)\n\n    mediumWebp: Media url for the medium image format of the photo. 450x450 pixels. Webp variant. (string)\n\n                                visibleSides[]: Visible sides\n                                    of the photo (string)\n\n                                    meta:\n\n                                        createdAt: When the brand was created on Medipim (unix\n                                                timestamp)\n\n                                        updatedAt: When the brand information was last updated (unix\n                                                timestamp)\n\n                                    organizations[]: List of organizations the photo is linked to.\n\n                                    name.{...}: Name (string, localized)\n\n                            frontals[]: A sub-collection of frontal photos associated\n                                with this product. (same as media query results)\n\n                                photoType: Type of photo \"packshot\",\n                                    \"productshot\"\n\n                                formats[]: List of available image formats\n\n    thumbnail: Media url for the thumbnail image format of the photo. 200x200 pixels. (string)\n\n    thumbnailWebp: Media url for the thumbnail image format of the photo. 200x200 pixels. (string)\n\n    medium: Media url for the medium image format of the photo. 450x450 pixels. (string)\n\n    mediumJpeg: Media url for the medium image format of the photo. 450x450 pixels. (string)\n\n    mediumWebp: Media url for the medium image format of the photo. 450x450 pixels. Webp variant. (string)\n\n    largeJpg: Media url for the large image format of the photo. 900x900 pixels. (string)\n\n    largeWebp: Media url for the large image format of the photo. 900x900 pixels. Webp variant. (string)\n\n    huge: Media url for the huge image format of the photo. 1500x1500 pixels. (string)\n\n    hugeWebp: Media url for the huge image format of the photo. 1500x1500 pixels. Webp variant. (string)\n\n                        links[]: A collection of media links associated with this product. (same as media query results)\n\n                            descriptions[]: A collection of descriptions for this product.\n\n                                id: ID of the description. (integer, unique)\n\n                                locales[]: Languages for\n                                    which this description is suitable. (string[])\n\n                                targetGroups[]: Target\n                                        groups for which this description is suitable. (string[])\n\n                                type: Type of\n                                    description. (string)\n\n                                content.{...}: Description content (string, localized)\n\n                                    meta:\n\n                                        createdAt: When the description was created on Medipim (unix\n                                                timestamp)\n\n                                        updatedAt: When the description was last updated (unix\n                                                timestamp)\n\n                            leaflets[]: A collection of leaflets for this product.\n\n                                id: ID of the leaflet (integer, unique)\n\n                                locales[]: Languages for\n                                    which the leaflet is suitable.\n\n                                type: Type of leaflet\n                                    (\n                                                                            \"pil\",                                                                             \"spc\"                                                                        )\n\n                                url.{...}: Urls of the leaflet (string, localized)\n\n                                    meta:\n\n                                        createdAt: When the leaflet was added on Medipim (unix\n                                                timestamp)\n\n                                        updatedAt: When the leaflet was last updated (unix\n                                                timestamp)\n\n                            meta:\n\n                                createdAt: When the product was added to Medipim. (unix\n                                        timestamp)\n\n                                updatedAt: The last time the product was modified (includes\n                                    modifications to photos, links, ...). (unix timestamp)\n\n                                embedUrl: A pre-signed link to the embed endpoint for this product.\n                                    Note that this URL is only valid a few hours. (string)\n\n            The same media item (photos, frontals and links) can be linked to multiple products"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Get all active products, with minimumContent, updated since Jan 1st 2022. Sort by name. The default\n                    pagination size will be used.\n\n                    Get all active products which have a public price using the hasContent filter. The default\n                    pagination size will be used.\n\n                    Get all products that have a name and at least 1 media item for the locale en.\n\n                Possible values for the locales can be found here: Languages."
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/remove-media",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_remove-media.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "remove-media",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/products/remove-media",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/products/remove-media\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    product: one of the following (required)\n\n                        Medipim product ID (string)\n\n                        Key value array containing the identifier field and value (array)\n\n                media: ID of the media item (integer, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    product:\n\n                        id, ...: product information (same as products query results)"
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Remove media from product using product ID"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/stream",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_stream.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "stream",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/products/stream",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/products/stream\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: see POST\n                        /v4/products/query (required)\n\n                sorting: see POST\n                        /v4/products/query (required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n            Each line of the response contains a single result. The response should be read line by line, and each\n                line JSON decoded separately. Each line ends with a newline character (`\\n`).\n            Each succesful result is formatted like this:\n\n            {\"meta\": {\"total\": 2, \"index\": 0}, \"result\": {\"id\": 1, ...}}\n\n            {\"meta\": {\"total\": 2, \"index\": 1}, \"result\": {\"id\": 2, ...}}\n\n                    meta:\n\n                        total: Total number of results. (integer)\n\n                        index: Index of this result in the entire resultset. (integer)\n\n                    result:\n\n                        id, ...: product information (same as products query results)\n\n            If no results are found matching the filter, the response will have status 204 (= no content)."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Get all active products which have a public price using the hasContent filter and are also in the category 404.\n\n                    Get all active products, with minimumContent. Sort by name. The default pagination size will be used.\n\n                    Get all active products distributed by a specific company."
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/products/update",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_products_update.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "products",
      "endpoint": "update",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/products/update",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/products/update\n\n            Headers\n\n                Authorization\n\n            Body\n\n                    product: one of the following (required)\n\n                        Medipim product ID (string)\n\n                        Key value array containing the identifier field and value (array)\n\n                data: See /v4/products/create"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    product:\n\n                        id, name, ...: product information (same format as product search results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/public-categories/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_public-categories_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "public-categories",
      "endpoint": "query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/public-categories/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/public-categories/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Matches public category by Medipim ID.\n                            Integer\n                            {\"id\": 1}\n\n                            {\"parent\": ...}\n                            Matches public category by their parent category ID.\n                            Integer\n                            {\"parent\": 1}\n\n                            {\"search\": ...}\n                            Matches public category by searching their name.\n                            String\n                            {\"search\": {\"query\": \"skin\", \"locale\": \"en\"}}\n\n                            {\"and\": [...]}\n                            Matches public categories that match all of the given filters.\n                            A list of filters.\n                            {\"and\": [{\"id\": 10}, {\"parent\": 1}]}\n\n                            {\"or\": [...]}\n                            Matches public categories that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"id\": 1}, {\"parent\": 2}]}\n\n                            {\"not\": ...}\n                            Matches public categories that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"parent\": \"1\"}}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total number of public categories (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]:\n\n                        id: Medipim ID of the public category (integer, unique)\n\n                        name.{...}: Name of the public category (string, localized)\n\n                        parent: Id of the parent category (integer)\n\n                        order: Sort order of the public category (integer)\n\n                            meta:\n\n                                createdAt: When the public category was created on Medipim (unix timestamp)\n\n                                updatedAt: when the public category information was last updated (unix timestamp)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all public categories"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/users/api-keys/create",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_users_api-keys_create.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "users",
      "endpoint": "api-keys/create",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/api-keys/create",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/api-keys/create\n\n            Headers\n\n                Authorization\n\n            Body\n\n                user: Medipim ID of the user (integer, required)\n\n                name: Descriptive text to describe what the key will be used for (string, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    apiKey:\n\n                        id: API key ID (integer)\n\n                        name: Text describing what the API should be used for (string)\n\n                        secret: Text hash that is used to indentify the API key (integer)\n\n                        isEnabled: Status of the API key (boolean)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/users/api-keys/revoke",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_users_api-keys_revoke.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "users",
      "endpoint": "api-keys/revoke",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/api-keys/revoke",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/api-keys/revoke\n\n            Headers\n\n                Authorization\n\n            Body\n\n                id: ID of the API key to revoke (integer, required)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n            The response will have status 204 (= no content) is everything was successful"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/users/create",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_users_create.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "users",
      "endpoint": "create",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/users/create",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/users/create\n\n            Headers\n\n                Authorization\n\n            Body\n\n                email: E-mail address of the user (string, required)\n\n                password: Secure password of the user to be used when logging in on Medipim platform (string, optional)\n\n                role: Role of the user in Medipim (\"organization_manager\", \"organization_customer_service\", \"medical_professional\" or \"software_developer\", required)\n\n                targetGroups[]: List of target groups for which this user is suited. (string[], optional)\n\n                organization: Medipim ID of the organization to which the user belongs (integer, required)\n\n                isEnabled: If the user should be enabled on Medipim (boolean, optional; default is true)\n\n                    profile:\n\n                        name: Name of the user (string, required)\n\n                    preferences:\n\n                        isPublic: Flag to determine if the user should be publicly visible for everybody (boolean, optional; default is true)\n\n                        language: Language for which the user should be configured (string, required)\n\n                    subscription:\n\n                        type: Medipim ID of the subscription to be used (integer, required)\n\n                        start: Date when the subscription should be started (unix timestamp, optional)\n\n                        end: Date when the subscription should be stopped (unix timestamp, optional)"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    user:\n\n                        id, name, ... : user information (same as users query results)"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/users/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_users_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "users",
      "endpoint": "query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/users/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/users/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                sorting: one of the sortings below. (optional; default is {\"id\": \"ASC\"})\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Matches users by Medipim ID.\n                            One or more IDs\n                            {\"id\": 1} or {\"id\": [1, 2]}\n\n                            {\"organization\": ...}\n                            Matches user by it's organization.\n                            Medipim organization ID\n                            {\"organization\": 1}\n\n                            {\"vatNr\": ...}\n                            Matches users by the VAT number of linked organization.\n                            String\n                            {\"vatNr\": \"BE0123321123\"}\n\n                            {\"and\": [...]}\n                            Matches users that match all the given filters.\n                            A list of filters.\n                            {\"and\": [{\"id\": 1}, {\"organization\": 1}]}\n\n                            {\"or\": [...]}\n                            Matches users that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"id\": 1}, {\"id\": 2}]}\n\n                            {\"not\": ...}\n                            Matches users that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"organization\": 1}}\n\n                            Sorting\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Sort by Medipim ID\n                            \"ASC\" or \"DESC\"\n                            {\"id\": \"ASC\"} or {\"id\": \"DESC\"}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta\n\n                        total: total number of users (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]\n\n                        id: Medipim ID of the user (integer, unique)\n\n                        name: Name of the user (string)\n\n                        organization: Medipim ID of the user organization (integer)\n\n                            meta:\n\n                                createdAt: When the user was created on Medipim (unix timestamp)\n\n                                updatedAt: when the user was last updated (unix timestamp)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all users from a specific organization"
        }
      ]
    },
    {
      "@type": "APIEndpoint",
      "@id": "https://api.au.medipim.com/v4/users/subscription-types/query",
      "filename": "original_https_platform.au.medipim.com_docs_api_v4_endpoints_users_subscription-types_query.html.html",
      "title": "Medipim AU - API V4",
      "lastUpdated": "05/06/2025",
      "category": "users",
      "endpoint": "subscription-types/query",
      "method": "POST",
      "apiUrl": "https://api.au.medipim.com/v4/subscription-types/query",
      "sections": [
        {
          "type": "request",
          "title": "Request",
          "content": "Method\n\n            POST\n\n            URL\n\n            https://api.au.medipim.com/v4/subscription-types/query\n\n            Headers\n\n                Authorization\n\n            Body\n\n                filter: one of the filters below; filters can be combined using and, or & not. (optional)\n\n                    page (optional; if none is provided all results are returned)\n\n                        no: page number (zero-based)\n\n                        size: one of 10, 50, 100 or 250 (defaults to 100)\n\n                            Filter\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Matches subscription by Medipim ID.\n                            Integer\n                            {\"id\": 1}\n\n                            {\"code\": ...}\n                            Matches subscription by code.\n                            String\n                            {\"code\": \"trial\"}\n\n                            {\"and\": [...]}\n                            Matches subscriptions that match all of the given filters.\n                            A list of filters.\n                            {\"and\": [{\"id\": 1}, {\"code\": \"trial\"}]}\n\n                            {\"or\": [...]}\n                            Matches subscriptions that match any of the given filters.\n                            A list of filters.\n                            {\"or\": [{\"id\": 1}, {\"id\": 2}]}\n\n                            {\"not\": ...}\n                            Matches subscriptions that do not match the given filter.\n                            A filter.\n                            {\"not\": {\"code\": \"trial\"}}\n\n                            Sorting\n                            Description\n                            Parameters\n                            Examples\n\n                            {\"id\": ...}\n                            Sort by Medipim ID\n                            \"ASC\" or \"DESC\"\n                            {\"id\": \"ASC\"} or {\"id\": \"DESC\"}"
        },
        {
          "type": "response",
          "title": "Response",
          "content": "Body\n\n                    meta:\n\n                        total: total number of subscriptions (integer)\n\n                            page:\n\n                                no: page number (zero-based) (integer)\n\n                                offset: offset of the first item in the entire resultset (integer)\n\n                                size: size of the page (integer)\n\n                    results[]:\n\n                        id: Medipim ID of the subscription (integer, unique)\n\n                        name.{...}: Name of the subscription (string, localized)\n\n                        code: Code of the subscription (string)\n\n            Notice\n\n            The meta page section will only be returned if you added a page in the request body."
        },
        {
          "type": "section",
          "title": "Examples",
          "content": "Fetch all subscription types"
        }
      ]
    }
  ],
  "totalFiles": 56,
  "processingErrors": [],
  "navigationEndpoints": [
    {
      "href": "endpoints/products/query.html",
      "method": "POST",
      "path": "/products/query",
      "fullTitle": "POST /products/query"
    },
    {
      "href": "endpoints/products/stream.html",
      "method": "POST",
      "path": "/products/stream",
      "fullTitle": "POST /products/stream"
    },
    {
      "href": "endpoints/products/find.html",
      "method": "GET",
      "path": "/products/find",
      "fullTitle": "GET /products/find"
    },
    {
      "href": "endpoints/products/embed.html",
      "method": "GET",
      "path": "/products/embed",
      "fullTitle": "GET /products/embed"
    },
    {
      "href": "endpoints/products/create.html",
      "method": "POST",
      "path": "/products/create",
      "fullTitle": "POST /products/create"
    },
    {
      "href": "endpoints/products/update.html",
      "method": "POST",
      "path": "/products/update",
      "fullTitle": "POST /products/update"
    },
    {
      "href": "endpoints/products/add-media.html",
      "method": "POST",
      "path": "/products/add-media",
      "fullTitle": "POST /products/add-media"
    },
    {
      "href": "endpoints/products/remove-media.html",
      "method": "POST",
      "path": "/products/remove-media",
      "fullTitle": "POST /products/remove-media"
    },
    {
      "href": "endpoints/products/get-fields.html",
      "method": "GET",
      "path": "/products/get-fields",
      "fullTitle": "GET /products/get-fields"
    },
    {
      "href": "endpoints/products/descriptions/create.html",
      "method": "POST",
      "path": "/product/descriptions/create",
      "fullTitle": "POST /product/descriptions/create"
    },
    {
      "href": "endpoints/products/descriptions/update.html",
      "method": "POST",
      "path": "/product/descriptions/update",
      "fullTitle": "POST /product/descriptions/update"
    },
    {
      "href": "endpoints/products/descriptions/delete.html",
      "method": "POST",
      "path": "/product/descriptions/delete",
      "fullTitle": "POST /product/descriptions/delete"
    },
    {
      "href": "endpoints/products/attributes/query.html",
      "method": "POST",
      "path": "/product/attributes/query",
      "fullTitle": "POST /product/attributes/query"
    },
    {
      "href": "endpoints/products/attributes/find.html",
      "method": "GET",
      "path": "/product/attributes/find",
      "fullTitle": "GET /product/attributes/find"
    },
    {
      "href": "endpoints/products/attributes/options/query.html",
      "method": "POST",
      "path": "/product/attribute/options/query",
      "fullTitle": "POST /product/attribute/options/query"
    },
    {
      "href": "endpoints/products/attributes/options/find.html",
      "method": "GET",
      "path": "/product/attribute/options/find",
      "fullTitle": "GET /product/attribute/options/find"
    },
    {
      "href": "endpoints/media/query.html",
      "method": "POST",
      "path": "/media/query",
      "fullTitle": "POST /media/query"
    },
    {
      "href": "endpoints/media/stream.html",
      "method": "POST",
      "path": "/media/stream",
      "fullTitle": "POST /media/stream"
    },
    {
      "href": "endpoints/media/find.html",
      "method": "GET",
      "path": "/media/find",
      "fullTitle": "GET /media/find"
    },
    {
      "href": "endpoints/media/upload.html",
      "method": "POST",
      "path": "/media/upload",
      "fullTitle": "POST /media/upload"
    },
    {
      "href": "endpoints/media/create-link.html",
      "method": "POST",
      "path": "/media/create-link",
      "fullTitle": "POST /media/create-link"
    },
    {
      "href": "endpoints/media/update.html",
      "method": "POST",
      "path": "/media/update",
      "fullTitle": "POST /media/update"
    },
    {
      "href": "endpoints/media/publish.html",
      "method": "POST",
      "path": "/media/publish",
      "fullTitle": "POST /media/publish"
    },
    {
      "href": "endpoints/media/unpublish.html",
      "method": "POST",
      "path": "/media/unpublish",
      "fullTitle": "POST /media/unpublish"
    },
    {
      "href": "endpoints/media/get-fields.html",
      "method": "GET",
      "path": "/media/get-fields",
      "fullTitle": "GET /media/get-fields"
    },
    {
      "href": "endpoints/organizations/query.html",
      "method": "POST",
      "path": "/organizations/query",
      "fullTitle": "POST /organizations/query"
    },
    {
      "href": "endpoints/organizations/find.html",
      "method": "GET",
      "path": "/organizations/find",
      "fullTitle": "GET /organizations/find"
    },
    {
      "href": "endpoints/organizations/create.html",
      "method": "POST",
      "path": "/organizations/create",
      "fullTitle": "POST /organizations/create"
    },
    {
      "href": "endpoints/organizations/check-subscription.html",
      "method": "POST",
      "path": "/organizations/check/subscription",
      "fullTitle": "POST /organizations/check/subscription"
    },
    {
      "href": "endpoints/users/query.html",
      "method": "POST",
      "path": "/users/query",
      "fullTitle": "POST /users/query"
    },
    {
      "href": "endpoints/users/create.html",
      "method": "POST",
      "path": "/users/create",
      "fullTitle": "POST /users/create"
    },
    {
      "href": "endpoints/users/api-keys/create.html",
      "method": "POST",
      "path": "/api-keys/create",
      "fullTitle": "POST /api-keys/create"
    },
    {
      "href": "endpoints/users/api-keys/revoke.html",
      "method": "POST",
      "path": "/api-keys/revoke",
      "fullTitle": "POST /api-keys/revoke"
    },
    {
      "href": "endpoints/users/subscription-types/query.html",
      "method": "POST",
      "path": "/subscription-types/query",
      "fullTitle": "POST /subscription-types/query"
    },
    {
      "href": "endpoints/corrections/query.html",
      "method": "POST",
      "path": "/corrections/query",
      "fullTitle": "POST /corrections/query"
    },
    {
      "href": "endpoints/corrections/find.html",
      "method": "GET",
      "path": "/corrections/find",
      "fullTitle": "GET /corrections/find"
    },
    {
      "href": "endpoints/corrections/create.html",
      "method": "POST",
      "path": "/corrections/create",
      "fullTitle": "POST /corrections/create"
    },
    {
      "href": "endpoints/corrections/types.html",
      "method": "GET",
      "path": "/corrections/types",
      "fullTitle": "GET /corrections/types"
    },
    {
      "href": "endpoints/brands/query.html",
      "method": "POST",
      "path": "/brands/query",
      "fullTitle": "POST /brands/query"
    },
    {
      "href": "endpoints/brands/find.html",
      "method": "GET",
      "path": "/brands/find",
      "fullTitle": "GET /brands/find"
    },
    {
      "href": "endpoints/brands/create.html",
      "method": "POST",
      "path": "/brands/create",
      "fullTitle": "POST /brands/create"
    },
    {
      "href": "endpoints/brands/update.html",
      "method": "POST",
      "path": "/brands/update",
      "fullTitle": "POST /brands/update"
    },
    {
      "href": "endpoints/public-categories/query.html",
      "method": "POST",
      "path": "/public-categories/query",
      "fullTitle": "POST /public-categories/query"
    }
  ]
}